{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Linear Regression** is often the first algorithm that is taught in an introductory machine learning course. It's also one of the first machine learning algorithms people implement in code. However, results of fitting data using Linear Regression can be very misleading if the assumptions of Linear Regression are not satisfied by the dataset you are using. \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "A very basic paramter that beginners use to measure the accuracy of the model is the **r-squared coefficient**. However, r-sqaured coeffiecient can be only trusted when the assumptions of Linear Regression are met. You could end up with a model that does a poor job of modelling the data, yet gives a high r-sqaured value. We're going to take a look at such an example as we try to predict the closing price of a Google's stock for the next 10 days. \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We're going to use Quandl to get the stock data, the Pandas library to manipulate the data, and statsmodel module to train our model. I've regressed (Get the pun?) from using sklearn, which I'd normally use because Statsmodel has some really neat regression analysis features (such as a R-like summary table), which I can't seem to find in sklearn. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/ayooshmac/anaconda/lib/python2.7/site-packages/matplotlib/font_manager.py:273: UserWarning: Matplotlib is building the font cache using fc-list. This may take a moment.\n",
      "  warnings.warn('Matplotlib is building the font cache using fc-list. This may take a moment.')\n"
     ]
    }
   ],
   "source": [
    "%matplotlib inline\n",
    "\n",
    "import quandl as qd #Library to get the stock data\n",
    "import numpy as np #A Fast numerical Library\n",
    "import pickle #To save the classifier for later resuse\n",
    "import pandas as pd #Library to manpulate data\n",
    "import datetime\n",
    "import statsmodels.formula.api as smf #Used to train the model\n",
    "import matplotlib.pyplot as plt\n",
    "plt.rcParams[\"figure.figsize\"] = [10,6]\n",
    "from sklearn import preprocessing\n",
    "from IPython.display import display\n",
    "import math"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "The first thing we are going to do here is pull the data from Quandl. Quandl is a website that hosts a bunch of datasets that you could directly load into python using the quandl module. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Close</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Ex-Dividend</th>\n",
       "      <th>Split Ratio</th>\n",
       "      <th>Adj. Open</th>\n",
       "      <th>Adj. High</th>\n",
       "      <th>Adj. Low</th>\n",
       "      <th>Adj. Close</th>\n",
       "      <th>Adj. Volume</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2004-08-19</th>\n",
       "      <td>100.010</td>\n",
       "      <td>104.060</td>\n",
       "      <td>95.9600</td>\n",
       "      <td>100.335</td>\n",
       "      <td>44659000.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>50.159839</td>\n",
       "      <td>52.191109</td>\n",
       "      <td>48.128568</td>\n",
       "      <td>50.322842</td>\n",
       "      <td>44659000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-08-20</th>\n",
       "      <td>101.010</td>\n",
       "      <td>109.080</td>\n",
       "      <td>100.5000</td>\n",
       "      <td>108.310</td>\n",
       "      <td>22834300.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>50.661387</td>\n",
       "      <td>54.708881</td>\n",
       "      <td>50.405597</td>\n",
       "      <td>54.322689</td>\n",
       "      <td>22834300.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-08-23</th>\n",
       "      <td>110.760</td>\n",
       "      <td>113.480</td>\n",
       "      <td>109.0500</td>\n",
       "      <td>109.400</td>\n",
       "      <td>18256100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>55.551482</td>\n",
       "      <td>56.915693</td>\n",
       "      <td>54.693835</td>\n",
       "      <td>54.869377</td>\n",
       "      <td>18256100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-08-24</th>\n",
       "      <td>111.240</td>\n",
       "      <td>111.600</td>\n",
       "      <td>103.5700</td>\n",
       "      <td>104.870</td>\n",
       "      <td>15247300.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>55.792225</td>\n",
       "      <td>55.972783</td>\n",
       "      <td>51.945350</td>\n",
       "      <td>52.597363</td>\n",
       "      <td>15247300.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-08-25</th>\n",
       "      <td>104.760</td>\n",
       "      <td>108.000</td>\n",
       "      <td>103.8800</td>\n",
       "      <td>106.000</td>\n",
       "      <td>9188600.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>52.542193</td>\n",
       "      <td>54.167209</td>\n",
       "      <td>52.100830</td>\n",
       "      <td>53.164113</td>\n",
       "      <td>9188600.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-08-26</th>\n",
       "      <td>104.950</td>\n",
       "      <td>107.950</td>\n",
       "      <td>104.6600</td>\n",
       "      <td>107.910</td>\n",
       "      <td>7094800.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>52.637487</td>\n",
       "      <td>54.142132</td>\n",
       "      <td>52.492038</td>\n",
       "      <td>54.122070</td>\n",
       "      <td>7094800.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-08-27</th>\n",
       "      <td>108.100</td>\n",
       "      <td>108.620</td>\n",
       "      <td>105.6900</td>\n",
       "      <td>106.150</td>\n",
       "      <td>6211700.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>54.217364</td>\n",
       "      <td>54.478169</td>\n",
       "      <td>53.008633</td>\n",
       "      <td>53.239345</td>\n",
       "      <td>6211700.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-08-30</th>\n",
       "      <td>105.280</td>\n",
       "      <td>105.490</td>\n",
       "      <td>102.0100</td>\n",
       "      <td>102.010</td>\n",
       "      <td>5196700.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>52.802998</td>\n",
       "      <td>52.908323</td>\n",
       "      <td>51.162935</td>\n",
       "      <td>51.162935</td>\n",
       "      <td>5196700.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-08-31</th>\n",
       "      <td>102.320</td>\n",
       "      <td>103.710</td>\n",
       "      <td>102.1600</td>\n",
       "      <td>102.370</td>\n",
       "      <td>4917800.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>51.318415</td>\n",
       "      <td>52.015567</td>\n",
       "      <td>51.238167</td>\n",
       "      <td>51.343492</td>\n",
       "      <td>4917800.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-09-01</th>\n",
       "      <td>102.700</td>\n",
       "      <td>102.970</td>\n",
       "      <td>99.6700</td>\n",
       "      <td>100.250</td>\n",
       "      <td>9138200.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>51.509003</td>\n",
       "      <td>51.644421</td>\n",
       "      <td>49.989312</td>\n",
       "      <td>50.280210</td>\n",
       "      <td>9138200.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-09-02</th>\n",
       "      <td>99.090</td>\n",
       "      <td>102.370</td>\n",
       "      <td>98.9400</td>\n",
       "      <td>101.510</td>\n",
       "      <td>15118600.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>49.698414</td>\n",
       "      <td>51.343492</td>\n",
       "      <td>49.623182</td>\n",
       "      <td>50.912161</td>\n",
       "      <td>15118600.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-09-03</th>\n",
       "      <td>100.950</td>\n",
       "      <td>101.740</td>\n",
       "      <td>99.3200</td>\n",
       "      <td>100.010</td>\n",
       "      <td>5152400.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>50.631294</td>\n",
       "      <td>51.027517</td>\n",
       "      <td>49.813770</td>\n",
       "      <td>50.159839</td>\n",
       "      <td>5152400.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-09-07</th>\n",
       "      <td>101.010</td>\n",
       "      <td>102.000</td>\n",
       "      <td>99.6100</td>\n",
       "      <td>101.580</td>\n",
       "      <td>5847500.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>50.661387</td>\n",
       "      <td>51.157920</td>\n",
       "      <td>49.959219</td>\n",
       "      <td>50.947269</td>\n",
       "      <td>5847500.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-09-08</th>\n",
       "      <td>100.740</td>\n",
       "      <td>103.030</td>\n",
       "      <td>100.5000</td>\n",
       "      <td>102.300</td>\n",
       "      <td>4985600.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>50.525969</td>\n",
       "      <td>51.674514</td>\n",
       "      <td>50.405597</td>\n",
       "      <td>51.308384</td>\n",
       "      <td>4985600.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-09-09</th>\n",
       "      <td>102.500</td>\n",
       "      <td>102.710</td>\n",
       "      <td>101.0000</td>\n",
       "      <td>102.310</td>\n",
       "      <td>4061700.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>51.408694</td>\n",
       "      <td>51.514019</td>\n",
       "      <td>50.656371</td>\n",
       "      <td>51.313400</td>\n",
       "      <td>4061700.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-09-10</th>\n",
       "      <td>101.470</td>\n",
       "      <td>106.560</td>\n",
       "      <td>101.3000</td>\n",
       "      <td>105.330</td>\n",
       "      <td>8698800.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>50.892099</td>\n",
       "      <td>53.444980</td>\n",
       "      <td>50.806836</td>\n",
       "      <td>52.828075</td>\n",
       "      <td>8698800.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-09-13</th>\n",
       "      <td>106.630</td>\n",
       "      <td>108.410</td>\n",
       "      <td>106.4600</td>\n",
       "      <td>107.500</td>\n",
       "      <td>7844100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>53.480088</td>\n",
       "      <td>54.372844</td>\n",
       "      <td>53.394825</td>\n",
       "      <td>53.916435</td>\n",
       "      <td>7844100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-09-14</th>\n",
       "      <td>107.440</td>\n",
       "      <td>112.000</td>\n",
       "      <td>106.7900</td>\n",
       "      <td>111.490</td>\n",
       "      <td>10828900.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>53.886342</td>\n",
       "      <td>56.173402</td>\n",
       "      <td>53.560336</td>\n",
       "      <td>55.917612</td>\n",
       "      <td>10828900.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-09-15</th>\n",
       "      <td>110.560</td>\n",
       "      <td>114.230</td>\n",
       "      <td>110.2000</td>\n",
       "      <td>112.000</td>\n",
       "      <td>10713000.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>55.451172</td>\n",
       "      <td>57.291854</td>\n",
       "      <td>55.270615</td>\n",
       "      <td>56.173402</td>\n",
       "      <td>10713000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-09-16</th>\n",
       "      <td>112.340</td>\n",
       "      <td>115.800</td>\n",
       "      <td>111.6500</td>\n",
       "      <td>113.970</td>\n",
       "      <td>9266300.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>56.343928</td>\n",
       "      <td>58.079285</td>\n",
       "      <td>55.997860</td>\n",
       "      <td>57.161452</td>\n",
       "      <td>9266300.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-09-17</th>\n",
       "      <td>114.420</td>\n",
       "      <td>117.490</td>\n",
       "      <td>113.5500</td>\n",
       "      <td>117.490</td>\n",
       "      <td>9472500.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>57.387149</td>\n",
       "      <td>58.926902</td>\n",
       "      <td>56.950802</td>\n",
       "      <td>58.926902</td>\n",
       "      <td>9472500.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-09-20</th>\n",
       "      <td>116.950</td>\n",
       "      <td>121.600</td>\n",
       "      <td>116.7700</td>\n",
       "      <td>119.360</td>\n",
       "      <td>10628700.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>58.656066</td>\n",
       "      <td>60.988265</td>\n",
       "      <td>58.565787</td>\n",
       "      <td>59.864797</td>\n",
       "      <td>10628700.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-09-21</th>\n",
       "      <td>120.200</td>\n",
       "      <td>120.420</td>\n",
       "      <td>117.5100</td>\n",
       "      <td>117.840</td>\n",
       "      <td>7228700.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>60.286097</td>\n",
       "      <td>60.396438</td>\n",
       "      <td>58.936933</td>\n",
       "      <td>59.102444</td>\n",
       "      <td>7228700.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-09-22</th>\n",
       "      <td>117.450</td>\n",
       "      <td>119.670</td>\n",
       "      <td>116.8100</td>\n",
       "      <td>118.380</td>\n",
       "      <td>7581200.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>58.906840</td>\n",
       "      <td>60.020277</td>\n",
       "      <td>58.585849</td>\n",
       "      <td>59.373280</td>\n",
       "      <td>7581200.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-09-23</th>\n",
       "      <td>118.840</td>\n",
       "      <td>122.630</td>\n",
       "      <td>117.0200</td>\n",
       "      <td>120.820</td>\n",
       "      <td>8535600.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>59.603992</td>\n",
       "      <td>61.504860</td>\n",
       "      <td>58.691174</td>\n",
       "      <td>60.597057</td>\n",
       "      <td>8535600.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-09-24</th>\n",
       "      <td>120.970</td>\n",
       "      <td>124.100</td>\n",
       "      <td>119.7600</td>\n",
       "      <td>119.830</td>\n",
       "      <td>9123400.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>60.672290</td>\n",
       "      <td>62.242136</td>\n",
       "      <td>60.065416</td>\n",
       "      <td>60.100525</td>\n",
       "      <td>9123400.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-09-27</th>\n",
       "      <td>119.560</td>\n",
       "      <td>120.880</td>\n",
       "      <td>117.8000</td>\n",
       "      <td>118.260</td>\n",
       "      <td>7066100.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>59.965107</td>\n",
       "      <td>60.627150</td>\n",
       "      <td>59.082382</td>\n",
       "      <td>59.313094</td>\n",
       "      <td>7066100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-09-28</th>\n",
       "      <td>121.150</td>\n",
       "      <td>127.400</td>\n",
       "      <td>120.2100</td>\n",
       "      <td>126.860</td>\n",
       "      <td>16929000.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>60.762568</td>\n",
       "      <td>63.897245</td>\n",
       "      <td>60.291113</td>\n",
       "      <td>63.626409</td>\n",
       "      <td>16929000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-09-29</th>\n",
       "      <td>126.530</td>\n",
       "      <td>135.020</td>\n",
       "      <td>126.2300</td>\n",
       "      <td>131.080</td>\n",
       "      <td>30516400.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>63.460898</td>\n",
       "      <td>67.719042</td>\n",
       "      <td>63.310433</td>\n",
       "      <td>65.742942</td>\n",
       "      <td>30516400.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004-09-30</th>\n",
       "      <td>129.899</td>\n",
       "      <td>132.300</td>\n",
       "      <td>129.0000</td>\n",
       "      <td>129.600</td>\n",
       "      <td>13758000.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>65.150614</td>\n",
       "      <td>66.354831</td>\n",
       "      <td>64.699722</td>\n",
       "      <td>65.000651</td>\n",
       "      <td>13758000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-09-02</th>\n",
       "      <td>795.270</td>\n",
       "      <td>797.100</td>\n",
       "      <td>793.2600</td>\n",
       "      <td>796.870</td>\n",
       "      <td>1346589.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>795.270000</td>\n",
       "      <td>797.100000</td>\n",
       "      <td>793.260000</td>\n",
       "      <td>796.870000</td>\n",
       "      <td>1346589.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-09-06</th>\n",
       "      <td>798.390</td>\n",
       "      <td>810.890</td>\n",
       "      <td>795.4300</td>\n",
       "      <td>808.020</td>\n",
       "      <td>1963804.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>798.390000</td>\n",
       "      <td>810.890000</td>\n",
       "      <td>795.430000</td>\n",
       "      <td>808.020000</td>\n",
       "      <td>1963804.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-09-07</th>\n",
       "      <td>807.930</td>\n",
       "      <td>810.600</td>\n",
       "      <td>803.7200</td>\n",
       "      <td>807.990</td>\n",
       "      <td>1144517.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>807.930000</td>\n",
       "      <td>810.600000</td>\n",
       "      <td>803.720000</td>\n",
       "      <td>807.990000</td>\n",
       "      <td>1144517.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-09-08</th>\n",
       "      <td>805.220</td>\n",
       "      <td>808.420</td>\n",
       "      <td>801.0101</td>\n",
       "      <td>802.840</td>\n",
       "      <td>1132390.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>805.220000</td>\n",
       "      <td>808.420000</td>\n",
       "      <td>801.010100</td>\n",
       "      <td>802.840000</td>\n",
       "      <td>1132390.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-09-09</th>\n",
       "      <td>798.770</td>\n",
       "      <td>801.750</td>\n",
       "      <td>788.0500</td>\n",
       "      <td>788.480</td>\n",
       "      <td>1835378.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>798.770000</td>\n",
       "      <td>801.750000</td>\n",
       "      <td>788.050000</td>\n",
       "      <td>788.480000</td>\n",
       "      <td>1835378.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-09-12</th>\n",
       "      <td>784.520</td>\n",
       "      <td>800.170</td>\n",
       "      <td>783.5000</td>\n",
       "      <td>798.820</td>\n",
       "      <td>1837040.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>784.520000</td>\n",
       "      <td>800.170000</td>\n",
       "      <td>783.500000</td>\n",
       "      <td>798.820000</td>\n",
       "      <td>1837040.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-09-13</th>\n",
       "      <td>794.010</td>\n",
       "      <td>795.790</td>\n",
       "      <td>784.3300</td>\n",
       "      <td>788.720</td>\n",
       "      <td>1791680.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>794.010000</td>\n",
       "      <td>795.790000</td>\n",
       "      <td>784.330000</td>\n",
       "      <td>788.720000</td>\n",
       "      <td>1791680.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-09-14</th>\n",
       "      <td>787.530</td>\n",
       "      <td>796.330</td>\n",
       "      <td>787.5300</td>\n",
       "      <td>790.460</td>\n",
       "      <td>1284119.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>787.530000</td>\n",
       "      <td>796.330000</td>\n",
       "      <td>787.530000</td>\n",
       "      <td>790.460000</td>\n",
       "      <td>1284119.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-09-15</th>\n",
       "      <td>790.010</td>\n",
       "      <td>803.645</td>\n",
       "      <td>788.6600</td>\n",
       "      <td>801.230</td>\n",
       "      <td>1543512.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>790.010000</td>\n",
       "      <td>803.645000</td>\n",
       "      <td>788.660000</td>\n",
       "      <td>801.230000</td>\n",
       "      <td>1543512.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-09-16</th>\n",
       "      <td>799.020</td>\n",
       "      <td>799.020</td>\n",
       "      <td>793.6200</td>\n",
       "      <td>797.610</td>\n",
       "      <td>2092336.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>799.020000</td>\n",
       "      <td>799.020000</td>\n",
       "      <td>793.620000</td>\n",
       "      <td>797.610000</td>\n",
       "      <td>2092336.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-09-19</th>\n",
       "      <td>801.110</td>\n",
       "      <td>803.990</td>\n",
       "      <td>793.5600</td>\n",
       "      <td>795.390</td>\n",
       "      <td>1121804.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>801.110000</td>\n",
       "      <td>803.990000</td>\n",
       "      <td>793.560000</td>\n",
       "      <td>795.390000</td>\n",
       "      <td>1121804.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-09-20</th>\n",
       "      <td>800.000</td>\n",
       "      <td>802.750</td>\n",
       "      <td>798.2600</td>\n",
       "      <td>799.780</td>\n",
       "      <td>1048091.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>800.000000</td>\n",
       "      <td>802.750000</td>\n",
       "      <td>798.260000</td>\n",
       "      <td>799.780000</td>\n",
       "      <td>1048091.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-09-21</th>\n",
       "      <td>801.260</td>\n",
       "      <td>805.910</td>\n",
       "      <td>796.0300</td>\n",
       "      <td>805.030</td>\n",
       "      <td>1330556.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>801.260000</td>\n",
       "      <td>805.910000</td>\n",
       "      <td>796.030000</td>\n",
       "      <td>805.030000</td>\n",
       "      <td>1330556.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-09-22</th>\n",
       "      <td>810.000</td>\n",
       "      <td>819.060</td>\n",
       "      <td>807.7100</td>\n",
       "      <td>815.950</td>\n",
       "      <td>1749904.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>810.000000</td>\n",
       "      <td>819.060000</td>\n",
       "      <td>807.710000</td>\n",
       "      <td>815.950000</td>\n",
       "      <td>1749904.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-09-23</th>\n",
       "      <td>815.140</td>\n",
       "      <td>817.000</td>\n",
       "      <td>812.7300</td>\n",
       "      <td>814.960</td>\n",
       "      <td>1400792.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>815.140000</td>\n",
       "      <td>817.000000</td>\n",
       "      <td>812.730000</td>\n",
       "      <td>814.960000</td>\n",
       "      <td>1400792.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-09-26</th>\n",
       "      <td>809.820</td>\n",
       "      <td>810.080</td>\n",
       "      <td>800.4500</td>\n",
       "      <td>802.650</td>\n",
       "      <td>1417513.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>809.820000</td>\n",
       "      <td>810.080000</td>\n",
       "      <td>800.450000</td>\n",
       "      <td>802.650000</td>\n",
       "      <td>1417513.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-09-27</th>\n",
       "      <td>801.830</td>\n",
       "      <td>813.490</td>\n",
       "      <td>801.8300</td>\n",
       "      <td>810.730</td>\n",
       "      <td>1313971.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>801.830000</td>\n",
       "      <td>813.490000</td>\n",
       "      <td>801.830000</td>\n",
       "      <td>810.730000</td>\n",
       "      <td>1313971.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-09-28</th>\n",
       "      <td>804.080</td>\n",
       "      <td>810.250</td>\n",
       "      <td>802.7803</td>\n",
       "      <td>810.060</td>\n",
       "      <td>1460862.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>804.080000</td>\n",
       "      <td>810.250000</td>\n",
       "      <td>802.780300</td>\n",
       "      <td>810.060000</td>\n",
       "      <td>1460862.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-09-29</th>\n",
       "      <td>807.230</td>\n",
       "      <td>813.910</td>\n",
       "      <td>800.8550</td>\n",
       "      <td>802.640</td>\n",
       "      <td>1343958.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>807.230000</td>\n",
       "      <td>813.910000</td>\n",
       "      <td>800.855000</td>\n",
       "      <td>802.640000</td>\n",
       "      <td>1343958.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-09-30</th>\n",
       "      <td>803.600</td>\n",
       "      <td>808.090</td>\n",
       "      <td>801.5000</td>\n",
       "      <td>804.060</td>\n",
       "      <td>1547523.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>803.600000</td>\n",
       "      <td>808.090000</td>\n",
       "      <td>801.500000</td>\n",
       "      <td>804.060000</td>\n",
       "      <td>1547523.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-10-03</th>\n",
       "      <td>802.550</td>\n",
       "      <td>803.540</td>\n",
       "      <td>796.2300</td>\n",
       "      <td>800.380</td>\n",
       "      <td>1480500.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>802.550000</td>\n",
       "      <td>803.540000</td>\n",
       "      <td>796.230000</td>\n",
       "      <td>800.380000</td>\n",
       "      <td>1480500.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-10-04</th>\n",
       "      <td>805.000</td>\n",
       "      <td>806.500</td>\n",
       "      <td>799.6700</td>\n",
       "      <td>802.790</td>\n",
       "      <td>1252635.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>805.000000</td>\n",
       "      <td>806.500000</td>\n",
       "      <td>799.670000</td>\n",
       "      <td>802.790000</td>\n",
       "      <td>1252635.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-10-05</th>\n",
       "      <td>806.000</td>\n",
       "      <td>808.500</td>\n",
       "      <td>800.7100</td>\n",
       "      <td>801.230</td>\n",
       "      <td>1207463.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>806.000000</td>\n",
       "      <td>808.500000</td>\n",
       "      <td>800.710000</td>\n",
       "      <td>801.230000</td>\n",
       "      <td>1207463.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-10-06</th>\n",
       "      <td>804.080</td>\n",
       "      <td>806.945</td>\n",
       "      <td>800.5100</td>\n",
       "      <td>803.080</td>\n",
       "      <td>1096169.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>804.080000</td>\n",
       "      <td>806.945000</td>\n",
       "      <td>800.510000</td>\n",
       "      <td>803.080000</td>\n",
       "      <td>1096169.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-10-07</th>\n",
       "      <td>805.930</td>\n",
       "      <td>805.940</td>\n",
       "      <td>796.8200</td>\n",
       "      <td>800.710</td>\n",
       "      <td>1158876.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>805.930000</td>\n",
       "      <td>805.940000</td>\n",
       "      <td>796.820000</td>\n",
       "      <td>800.710000</td>\n",
       "      <td>1158876.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-10-10</th>\n",
       "      <td>803.930</td>\n",
       "      <td>817.380</td>\n",
       "      <td>802.2400</td>\n",
       "      <td>814.170</td>\n",
       "      <td>1487125.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>803.930000</td>\n",
       "      <td>817.380000</td>\n",
       "      <td>802.240000</td>\n",
       "      <td>814.170000</td>\n",
       "      <td>1487125.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-10-11</th>\n",
       "      <td>814.170</td>\n",
       "      <td>819.860</td>\n",
       "      <td>807.3700</td>\n",
       "      <td>809.570</td>\n",
       "      <td>1680445.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>814.170000</td>\n",
       "      <td>819.860000</td>\n",
       "      <td>807.370000</td>\n",
       "      <td>809.570000</td>\n",
       "      <td>1680445.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-10-12</th>\n",
       "      <td>811.960</td>\n",
       "      <td>814.500</td>\n",
       "      <td>808.5545</td>\n",
       "      <td>811.770</td>\n",
       "      <td>902906.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>811.960000</td>\n",
       "      <td>814.500000</td>\n",
       "      <td>808.554500</td>\n",
       "      <td>811.770000</td>\n",
       "      <td>902906.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-10-13</th>\n",
       "      <td>806.070</td>\n",
       "      <td>806.560</td>\n",
       "      <td>798.6200</td>\n",
       "      <td>804.080</td>\n",
       "      <td>1354530.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>806.070000</td>\n",
       "      <td>806.560000</td>\n",
       "      <td>798.620000</td>\n",
       "      <td>804.080000</td>\n",
       "      <td>1354530.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016-10-14</th>\n",
       "      <td>807.450</td>\n",
       "      <td>810.090</td>\n",
       "      <td>802.3200</td>\n",
       "      <td>804.600</td>\n",
       "      <td>1091699.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>807.450000</td>\n",
       "      <td>810.090000</td>\n",
       "      <td>802.320000</td>\n",
       "      <td>804.600000</td>\n",
       "      <td>1091699.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3062 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               Open     High       Low    Close      Volume  Ex-Dividend  \\\n",
       "Date                                                                       \n",
       "2004-08-19  100.010  104.060   95.9600  100.335  44659000.0          0.0   \n",
       "2004-08-20  101.010  109.080  100.5000  108.310  22834300.0          0.0   \n",
       "2004-08-23  110.760  113.480  109.0500  109.400  18256100.0          0.0   \n",
       "2004-08-24  111.240  111.600  103.5700  104.870  15247300.0          0.0   \n",
       "2004-08-25  104.760  108.000  103.8800  106.000   9188600.0          0.0   \n",
       "2004-08-26  104.950  107.950  104.6600  107.910   7094800.0          0.0   \n",
       "2004-08-27  108.100  108.620  105.6900  106.150   6211700.0          0.0   \n",
       "2004-08-30  105.280  105.490  102.0100  102.010   5196700.0          0.0   \n",
       "2004-08-31  102.320  103.710  102.1600  102.370   4917800.0          0.0   \n",
       "2004-09-01  102.700  102.970   99.6700  100.250   9138200.0          0.0   \n",
       "2004-09-02   99.090  102.370   98.9400  101.510  15118600.0          0.0   \n",
       "2004-09-03  100.950  101.740   99.3200  100.010   5152400.0          0.0   \n",
       "2004-09-07  101.010  102.000   99.6100  101.580   5847500.0          0.0   \n",
       "2004-09-08  100.740  103.030  100.5000  102.300   4985600.0          0.0   \n",
       "2004-09-09  102.500  102.710  101.0000  102.310   4061700.0          0.0   \n",
       "2004-09-10  101.470  106.560  101.3000  105.330   8698800.0          0.0   \n",
       "2004-09-13  106.630  108.410  106.4600  107.500   7844100.0          0.0   \n",
       "2004-09-14  107.440  112.000  106.7900  111.490  10828900.0          0.0   \n",
       "2004-09-15  110.560  114.230  110.2000  112.000  10713000.0          0.0   \n",
       "2004-09-16  112.340  115.800  111.6500  113.970   9266300.0          0.0   \n",
       "2004-09-17  114.420  117.490  113.5500  117.490   9472500.0          0.0   \n",
       "2004-09-20  116.950  121.600  116.7700  119.360  10628700.0          0.0   \n",
       "2004-09-21  120.200  120.420  117.5100  117.840   7228700.0          0.0   \n",
       "2004-09-22  117.450  119.670  116.8100  118.380   7581200.0          0.0   \n",
       "2004-09-23  118.840  122.630  117.0200  120.820   8535600.0          0.0   \n",
       "2004-09-24  120.970  124.100  119.7600  119.830   9123400.0          0.0   \n",
       "2004-09-27  119.560  120.880  117.8000  118.260   7066100.0          0.0   \n",
       "2004-09-28  121.150  127.400  120.2100  126.860  16929000.0          0.0   \n",
       "2004-09-29  126.530  135.020  126.2300  131.080  30516400.0          0.0   \n",
       "2004-09-30  129.899  132.300  129.0000  129.600  13758000.0          0.0   \n",
       "...             ...      ...       ...      ...         ...          ...   \n",
       "2016-09-02  795.270  797.100  793.2600  796.870   1346589.0          0.0   \n",
       "2016-09-06  798.390  810.890  795.4300  808.020   1963804.0          0.0   \n",
       "2016-09-07  807.930  810.600  803.7200  807.990   1144517.0          0.0   \n",
       "2016-09-08  805.220  808.420  801.0101  802.840   1132390.0          0.0   \n",
       "2016-09-09  798.770  801.750  788.0500  788.480   1835378.0          0.0   \n",
       "2016-09-12  784.520  800.170  783.5000  798.820   1837040.0          0.0   \n",
       "2016-09-13  794.010  795.790  784.3300  788.720   1791680.0          0.0   \n",
       "2016-09-14  787.530  796.330  787.5300  790.460   1284119.0          0.0   \n",
       "2016-09-15  790.010  803.645  788.6600  801.230   1543512.0          0.0   \n",
       "2016-09-16  799.020  799.020  793.6200  797.610   2092336.0          0.0   \n",
       "2016-09-19  801.110  803.990  793.5600  795.390   1121804.0          0.0   \n",
       "2016-09-20  800.000  802.750  798.2600  799.780   1048091.0          0.0   \n",
       "2016-09-21  801.260  805.910  796.0300  805.030   1330556.0          0.0   \n",
       "2016-09-22  810.000  819.060  807.7100  815.950   1749904.0          0.0   \n",
       "2016-09-23  815.140  817.000  812.7300  814.960   1400792.0          0.0   \n",
       "2016-09-26  809.820  810.080  800.4500  802.650   1417513.0          0.0   \n",
       "2016-09-27  801.830  813.490  801.8300  810.730   1313971.0          0.0   \n",
       "2016-09-28  804.080  810.250  802.7803  810.060   1460862.0          0.0   \n",
       "2016-09-29  807.230  813.910  800.8550  802.640   1343958.0          0.0   \n",
       "2016-09-30  803.600  808.090  801.5000  804.060   1547523.0          0.0   \n",
       "2016-10-03  802.550  803.540  796.2300  800.380   1480500.0          0.0   \n",
       "2016-10-04  805.000  806.500  799.6700  802.790   1252635.0          0.0   \n",
       "2016-10-05  806.000  808.500  800.7100  801.230   1207463.0          0.0   \n",
       "2016-10-06  804.080  806.945  800.5100  803.080   1096169.0          0.0   \n",
       "2016-10-07  805.930  805.940  796.8200  800.710   1158876.0          0.0   \n",
       "2016-10-10  803.930  817.380  802.2400  814.170   1487125.0          0.0   \n",
       "2016-10-11  814.170  819.860  807.3700  809.570   1680445.0          0.0   \n",
       "2016-10-12  811.960  814.500  808.5545  811.770    902906.0          0.0   \n",
       "2016-10-13  806.070  806.560  798.6200  804.080   1354530.0          0.0   \n",
       "2016-10-14  807.450  810.090  802.3200  804.600   1091699.0          0.0   \n",
       "\n",
       "            Split Ratio   Adj. Open   Adj. High    Adj. Low  Adj. Close  \\\n",
       "Date                                                                      \n",
       "2004-08-19          1.0   50.159839   52.191109   48.128568   50.322842   \n",
       "2004-08-20          1.0   50.661387   54.708881   50.405597   54.322689   \n",
       "2004-08-23          1.0   55.551482   56.915693   54.693835   54.869377   \n",
       "2004-08-24          1.0   55.792225   55.972783   51.945350   52.597363   \n",
       "2004-08-25          1.0   52.542193   54.167209   52.100830   53.164113   \n",
       "2004-08-26          1.0   52.637487   54.142132   52.492038   54.122070   \n",
       "2004-08-27          1.0   54.217364   54.478169   53.008633   53.239345   \n",
       "2004-08-30          1.0   52.802998   52.908323   51.162935   51.162935   \n",
       "2004-08-31          1.0   51.318415   52.015567   51.238167   51.343492   \n",
       "2004-09-01          1.0   51.509003   51.644421   49.989312   50.280210   \n",
       "2004-09-02          1.0   49.698414   51.343492   49.623182   50.912161   \n",
       "2004-09-03          1.0   50.631294   51.027517   49.813770   50.159839   \n",
       "2004-09-07          1.0   50.661387   51.157920   49.959219   50.947269   \n",
       "2004-09-08          1.0   50.525969   51.674514   50.405597   51.308384   \n",
       "2004-09-09          1.0   51.408694   51.514019   50.656371   51.313400   \n",
       "2004-09-10          1.0   50.892099   53.444980   50.806836   52.828075   \n",
       "2004-09-13          1.0   53.480088   54.372844   53.394825   53.916435   \n",
       "2004-09-14          1.0   53.886342   56.173402   53.560336   55.917612   \n",
       "2004-09-15          1.0   55.451172   57.291854   55.270615   56.173402   \n",
       "2004-09-16          1.0   56.343928   58.079285   55.997860   57.161452   \n",
       "2004-09-17          1.0   57.387149   58.926902   56.950802   58.926902   \n",
       "2004-09-20          1.0   58.656066   60.988265   58.565787   59.864797   \n",
       "2004-09-21          1.0   60.286097   60.396438   58.936933   59.102444   \n",
       "2004-09-22          1.0   58.906840   60.020277   58.585849   59.373280   \n",
       "2004-09-23          1.0   59.603992   61.504860   58.691174   60.597057   \n",
       "2004-09-24          1.0   60.672290   62.242136   60.065416   60.100525   \n",
       "2004-09-27          1.0   59.965107   60.627150   59.082382   59.313094   \n",
       "2004-09-28          1.0   60.762568   63.897245   60.291113   63.626409   \n",
       "2004-09-29          1.0   63.460898   67.719042   63.310433   65.742942   \n",
       "2004-09-30          1.0   65.150614   66.354831   64.699722   65.000651   \n",
       "...                 ...         ...         ...         ...         ...   \n",
       "2016-09-02          1.0  795.270000  797.100000  793.260000  796.870000   \n",
       "2016-09-06          1.0  798.390000  810.890000  795.430000  808.020000   \n",
       "2016-09-07          1.0  807.930000  810.600000  803.720000  807.990000   \n",
       "2016-09-08          1.0  805.220000  808.420000  801.010100  802.840000   \n",
       "2016-09-09          1.0  798.770000  801.750000  788.050000  788.480000   \n",
       "2016-09-12          1.0  784.520000  800.170000  783.500000  798.820000   \n",
       "2016-09-13          1.0  794.010000  795.790000  784.330000  788.720000   \n",
       "2016-09-14          1.0  787.530000  796.330000  787.530000  790.460000   \n",
       "2016-09-15          1.0  790.010000  803.645000  788.660000  801.230000   \n",
       "2016-09-16          1.0  799.020000  799.020000  793.620000  797.610000   \n",
       "2016-09-19          1.0  801.110000  803.990000  793.560000  795.390000   \n",
       "2016-09-20          1.0  800.000000  802.750000  798.260000  799.780000   \n",
       "2016-09-21          1.0  801.260000  805.910000  796.030000  805.030000   \n",
       "2016-09-22          1.0  810.000000  819.060000  807.710000  815.950000   \n",
       "2016-09-23          1.0  815.140000  817.000000  812.730000  814.960000   \n",
       "2016-09-26          1.0  809.820000  810.080000  800.450000  802.650000   \n",
       "2016-09-27          1.0  801.830000  813.490000  801.830000  810.730000   \n",
       "2016-09-28          1.0  804.080000  810.250000  802.780300  810.060000   \n",
       "2016-09-29          1.0  807.230000  813.910000  800.855000  802.640000   \n",
       "2016-09-30          1.0  803.600000  808.090000  801.500000  804.060000   \n",
       "2016-10-03          1.0  802.550000  803.540000  796.230000  800.380000   \n",
       "2016-10-04          1.0  805.000000  806.500000  799.670000  802.790000   \n",
       "2016-10-05          1.0  806.000000  808.500000  800.710000  801.230000   \n",
       "2016-10-06          1.0  804.080000  806.945000  800.510000  803.080000   \n",
       "2016-10-07          1.0  805.930000  805.940000  796.820000  800.710000   \n",
       "2016-10-10          1.0  803.930000  817.380000  802.240000  814.170000   \n",
       "2016-10-11          1.0  814.170000  819.860000  807.370000  809.570000   \n",
       "2016-10-12          1.0  811.960000  814.500000  808.554500  811.770000   \n",
       "2016-10-13          1.0  806.070000  806.560000  798.620000  804.080000   \n",
       "2016-10-14          1.0  807.450000  810.090000  802.320000  804.600000   \n",
       "\n",
       "            Adj. Volume  \n",
       "Date                     \n",
       "2004-08-19   44659000.0  \n",
       "2004-08-20   22834300.0  \n",
       "2004-08-23   18256100.0  \n",
       "2004-08-24   15247300.0  \n",
       "2004-08-25    9188600.0  \n",
       "2004-08-26    7094800.0  \n",
       "2004-08-27    6211700.0  \n",
       "2004-08-30    5196700.0  \n",
       "2004-08-31    4917800.0  \n",
       "2004-09-01    9138200.0  \n",
       "2004-09-02   15118600.0  \n",
       "2004-09-03    5152400.0  \n",
       "2004-09-07    5847500.0  \n",
       "2004-09-08    4985600.0  \n",
       "2004-09-09    4061700.0  \n",
       "2004-09-10    8698800.0  \n",
       "2004-09-13    7844100.0  \n",
       "2004-09-14   10828900.0  \n",
       "2004-09-15   10713000.0  \n",
       "2004-09-16    9266300.0  \n",
       "2004-09-17    9472500.0  \n",
       "2004-09-20   10628700.0  \n",
       "2004-09-21    7228700.0  \n",
       "2004-09-22    7581200.0  \n",
       "2004-09-23    8535600.0  \n",
       "2004-09-24    9123400.0  \n",
       "2004-09-27    7066100.0  \n",
       "2004-09-28   16929000.0  \n",
       "2004-09-29   30516400.0  \n",
       "2004-09-30   13758000.0  \n",
       "...                 ...  \n",
       "2016-09-02    1346589.0  \n",
       "2016-09-06    1963804.0  \n",
       "2016-09-07    1144517.0  \n",
       "2016-09-08    1132390.0  \n",
       "2016-09-09    1835378.0  \n",
       "2016-09-12    1837040.0  \n",
       "2016-09-13    1791680.0  \n",
       "2016-09-14    1284119.0  \n",
       "2016-09-15    1543512.0  \n",
       "2016-09-16    2092336.0  \n",
       "2016-09-19    1121804.0  \n",
       "2016-09-20    1048091.0  \n",
       "2016-09-21    1330556.0  \n",
       "2016-09-22    1749904.0  \n",
       "2016-09-23    1400792.0  \n",
       "2016-09-26    1417513.0  \n",
       "2016-09-27    1313971.0  \n",
       "2016-09-28    1460862.0  \n",
       "2016-09-29    1343958.0  \n",
       "2016-09-30    1547523.0  \n",
       "2016-10-03    1480500.0  \n",
       "2016-10-04    1252635.0  \n",
       "2016-10-05    1207463.0  \n",
       "2016-10-06    1096169.0  \n",
       "2016-10-07    1158876.0  \n",
       "2016-10-10    1487125.0  \n",
       "2016-10-11    1680445.0  \n",
       "2016-10-12     902906.0  \n",
       "2016-10-13    1354530.0  \n",
       "2016-10-14    1091699.0  \n",
       "\n",
       "[3062 rows x 12 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# api_key = 'fiz_cgR7TxgcofzoHqnA'\n",
    "df = qd.get(\"WIKI/GOOGL\")\n",
    "display(df)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "I am not going to use the features the way they are given in the dataframe. Though feature selection and feature engineering form arguably the most critical part of the model training process, I'm going to skim over it for now, so as to focus on the main topic here, i.e, testing the statistical assumptions of Linear Regression. \n",
    "\n",
    "You'll see a lot of columns in the table come in two flavours; Regular and the Adjusted ones. The adjusted ones account for stock splits (One stock becomes two, and the value of each stock is halfed), whereas the regular one doesn't, so we are going to drop those columns. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "df = df[['Adj. Open',  'Adj. High',  'Adj. Low',  'Adj. Close', 'Adj. Volume']]\n",
    "df.columns = ['Open',  'High',  'Low',  'Close', 'Volume']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We will try to predict the price of stock for the next 10 days. For this we'll create our target variable and name it 'prediction'. In order to generate the entries for this variable in our training set, we lag the values of *'Adj. Close'* by 10 rows (days).  We'll also drop the bottom 10 rows which will have NaN values for the *predict* column. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "forecast_col = 'Close'\n",
    "df.fillna(value=-99999, inplace=True)\n",
    "forecast_out = int(math.ceil(0.01 * len(df)))\n",
    "df['predict'] = df[forecast_col].shift(forecast_out)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "df.dropna(inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Close</th>\n",
       "      <th>Volume</th>\n",
       "      <th>predict</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Open</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.999859</td>\n",
       "      <td>0.999798</td>\n",
       "      <td>0.999657</td>\n",
       "      <td>-0.560961</td>\n",
       "      <td>0.983204</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>High</th>\n",
       "      <td>0.999859</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.999768</td>\n",
       "      <td>0.999820</td>\n",
       "      <td>-0.558750</td>\n",
       "      <td>0.983367</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Low</th>\n",
       "      <td>0.999798</td>\n",
       "      <td>0.999768</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.999856</td>\n",
       "      <td>-0.564822</td>\n",
       "      <td>0.982715</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Close</th>\n",
       "      <td>0.999657</td>\n",
       "      <td>0.999820</td>\n",
       "      <td>0.999856</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.561983</td>\n",
       "      <td>0.982962</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Volume</th>\n",
       "      <td>-0.560961</td>\n",
       "      <td>-0.558750</td>\n",
       "      <td>-0.564822</td>\n",
       "      <td>-0.561983</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.564441</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>predict</th>\n",
       "      <td>0.983204</td>\n",
       "      <td>0.983367</td>\n",
       "      <td>0.982715</td>\n",
       "      <td>0.982962</td>\n",
       "      <td>-0.564441</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             Open      High       Low     Close    Volume   predict\n",
       "Open     1.000000  0.999859  0.999798  0.999657 -0.560961  0.983204\n",
       "High     0.999859  1.000000  0.999768  0.999820 -0.558750  0.983367\n",
       "Low      0.999798  0.999768  1.000000  0.999856 -0.564822  0.982715\n",
       "Close    0.999657  0.999820  0.999856  1.000000 -0.561983  0.982962\n",
       "Volume  -0.560961 -0.558750 -0.564822 -0.561983  1.000000 -0.564441\n",
       "predict  0.983204  0.983367  0.982715  0.982962 -0.564441  1.000000"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.corr()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here we see that the the variables *Open, High, Low, Close* are highly correlated. Let us drop all of them but *Close* variable while training our model. I've also dropped *Volume* to keep things simple. We could try another model later which has *Volume* in it too. Let us train our first linear model. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>         <td>predict</td>     <th>  R-squared:         </th> <td>   0.966</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.966</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>8.662e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Sun, 16 Oct 2016</td> <th>  Prob (F-statistic):</th>  <td>  0.00</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>19:37:28</td>     <th>  Log-Likelihood:    </th> <td> -14927.</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td>  3031</td>      <th>  AIC:               </th> <td>2.986e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td>  3029</td>      <th>  BIC:               </th> <td>2.987e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>     1</td>      <th>                     </th>     <td> </td>    \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>    \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "      <td></td>         <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th> <th>[95.0% Conf. Int.]</th> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Intercept</th> <td>    4.8595</td> <td>    1.292</td> <td>    3.761</td> <td> 0.000</td> <td>    2.326     7.393</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Close</th>     <td>    0.9641</td> <td>    0.003</td> <td>  294.316</td> <td> 0.000</td> <td>    0.958     0.971</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>50.193</td> <th>  Durbin-Watson:     </th> <td>   0.070</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th> <td> 0.000</td> <th>  Jarque-Bera (JB):  </th> <td>  95.329</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>          <td>-0.050</td> <th>  Prob(JB):          </th> <td>1.99e-21</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>      <td> 3.863</td> <th>  Cond. No.          </th> <td>    842.</td>\n",
       "</tr>\n",
       "</table>"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            OLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:                predict   R-squared:                       0.966\n",
       "Model:                            OLS   Adj. R-squared:                  0.966\n",
       "Method:                 Least Squares   F-statistic:                 8.662e+04\n",
       "Date:                Sun, 16 Oct 2016   Prob (F-statistic):               0.00\n",
       "Time:                        19:37:28   Log-Likelihood:                -14927.\n",
       "No. Observations:                3031   AIC:                         2.986e+04\n",
       "Df Residuals:                    3029   BIC:                         2.987e+04\n",
       "Df Model:                           1                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "==============================================================================\n",
       "                 coef    std err          t      P>|t|      [95.0% Conf. Int.]\n",
       "------------------------------------------------------------------------------\n",
       "Intercept      4.8595      1.292      3.761      0.000         2.326     7.393\n",
       "Close          0.9641      0.003    294.316      0.000         0.958     0.971\n",
       "==============================================================================\n",
       "Omnibus:                       50.193   Durbin-Watson:                   0.070\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):               95.329\n",
       "Skew:                          -0.050   Prob(JB):                     1.99e-21\n",
       "Kurtosis:                       3.863   Cond. No.                         842.\n",
       "==============================================================================\n",
       "\n",
       "Warnings:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "\"\"\""
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lm1 = smf.ols(formula='predict ~ Close', data=df).fit()\n",
    "lm1.summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The above table is one of the reasons I've prefered the use of Statsmodels to sklearn. Don't worry, you don't need to understand the entire table for this tutorial. Right now, we need to look at **Adj. R-squared** which is 0.966. A lot of beginners think this is a suuficient to evaluate the quality of a linear model. However, there is other stuff that we can look for. \n",
    "\n",
    "An interesting feature is the **[95.0% Conf. Int.]** or the **Confidence Intervals** for the coefficients. What is exactly mean't by confidence intervals? We assume that the training set we use is sampled from a population. We then fit our model to the data. So, the value of a particular coefficient would lie in it's *95% confidence interval* about 95 out of every 100 times we sample and fit the training set. \n",
    "\n",
    "**You should be alarmed if zero also falls in the confidence interval of a coefficient.** This means that there's a considerable probability that value of coefficient is zero, which implies there's no relationship between the feature and our target. Another feature that can tell us about such a problem is the **p-value** represented by the **P>|t|** column. It basically measures that probability that zero is present the confidence interval. In other words, it measures whether the relationship we observe is merely a statistical fluke. \n",
    "\n",
    "Since we're using 95% confidence intervals, the p-value for all the coefficients must be less than 0.05. We could also look at the **T-value** given by **t** column, which measures the number of standard deviations the coefficient is away from zero. Typically, for 95% confidence intervals, T-value should be more than 4 in magnitude. \n",
    "\n",
    "The current model fulfills all the above criteria. High value of r-squares, all the p-values below 0.05, and all the t-values above 4. \n",
    "\n",
    "## Job Done! ##\n",
    "\n",
    "*Actually, no.*\n",
    "\n",
    "What people often miss is all the rules we've described above can only be trusted given the the data obeys the assumptions of Linear Regression. Which are, \n",
    "\n",
    "1. The relationship between the dependent variables and the independent variables is a linear and an additive one. \n",
    "2. Errors are statistically independendent, i.e. no correlation amongst errors. \n",
    "3. Homoscedasticity, or the constant variance of errors\n",
    "4. Errors are normally distributed. \n",
    "\n",
    "So, we must check the data for these assumptions, otherwise all the quality parameters don't mean anything.  Let us plot error vs time graph first. \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.text.Text at 0x119e60150>"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAmoAAAGJCAYAAAA66h/OAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAIABJREFUeJzt3Xu8Jlld3/vvj7nslm6YzCXsbWagWxKBwRNENIAJsbcm\ngpwTb4kgGqIoHg1g5JD4khlNztP90sPlJOEg5sBJBIkSCBevjAGdUWZPjslBOQIBMwOMYLcz4+lG\nZpiRmWH2MNPr/PHU07t27bqsVbWqalU9n/fr9by6dz1Vq1atujy/Wpcqc84JAAAA6XnE2BkAAABA\nOQI1AACARBGoAQAAJIpADQAAIFEEagAAAIkiUAMAAEgUgRoARGRmjzWzvzAzGzkfR83snJlxnQcm\njBMYQFRmdsrM7s+ClS9k/75h7HzFYmZvym3Xrpk9mP3/L8zsPznnbnPOPdql8ZBKrzyY2cLMfqnv\nzAAId+HYGQAwO07S/+Scu7FpRjO7wDn3cNO00DT65Jx7iaSXZOteSPqrzrnvG2r9ANYLNWoA+lDa\n7Gdm329mv2dmrzOzz0laVEwzM/vnWe3cGTP792b26CyNVZPeD5rZaUm/a2YbZvYfzOxzZvZ5M/t9\nM/vLJev/CTN7T2Haz5rZ67P/v8jMPp3Vjn3azL4neMMLTY5mdqOZ/bSZ/ZesJu43zOyyLL/3ZHl9\nXG75J5nZ9WZ2p5ndYmbPq1nXjWb2qiyNe8zs18zsL1XM++XZuu80s0+Z2Q9l058j6SclfXeWv4+E\nbjOA/hCoARjaMyT9saTHSPrfKqb9gKTvk3Rc0uMlPUrSvymk8w2SnijpOZK+P5vnSkmXSfrHkr5Y\nsu53SnqumR2WpCyYep6kt5vZIyX9rKTnOOceLelvSvpoy20sNjl+t6R/KOmvSPprkv6rpLdIulTS\nJyQtsvw8UtL1kv6DpCskvUDS/2lmT6pZ1z+S9CJJW5IelvRzFfO9S9KfZvM9T9KrzGzbOffbkl4l\n6V3OuUc5574maEsB9IpADUAfft3M7spqt+4ysxfnvrvDOfdG59w559xuxbTvlfQ659xp59z9kq6V\n9IJcx3gnaeGceyCb/0uSLpf0BLf0EefcvcVMOef+VNKHJX1nNunvSLrPOfeh7O+HJf11MzvknDvr\nnLslUnm81Tl3yjn3BUnvl/Rp59yNzrlzkt4jaRUc/T1Jf+Kc+6VsO/6bpF/VMrCq8jbn3C3OuS9K\n+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\nTtQ+heyjLsdezOO5y77sWk5dyq9smfy0GOIe89X9Y2Ot2z8v4cdArGOqad422zrkeeC7vjKr53d2\nkU+jyzHi21+2KGTbm/JS997tUL7bkP19IJ5p7KNmZhdIeq1z7sdrZ0yMfx+18iH3x48f187OTtM6\nWuWtWOYx+zBU7c+uj2Zok65v3lbpeByLpWkN3UetKd3QdYWm1VYffdRiLRuSfplY/WHq+pS16aNW\ndszE6AdUl59Yx3xdemXvgQ19B2KsvLRNqyy94fuohT+uJuQ6GZJGjMfI5NNoc3zm31Pqcz3pco42\nnYcx+9r5bkPrPmrOuYclPSsoV5NSfpLcdNNNtUulPjx7CijDdTKNfmr99SlbPsIijcdY9IG+YO1Q\nbnlD9IcO+d0Zs99lnu+ozzdJulLSeyTdt5runPvVXnIVQdsH3ha/r0m/XcZK0l3XGrXiXRM1av2i\nRq1ZvoY9do1a17wVpVWj1rzuvvLSNq2y9OY86rMpjRRq1PK1WH3VqOXz1/ZcqTsOi9/la+mb0uo6\n6vOQpDslfZOkb80+f89z2ejM7FvM7BNm9ikze2Vf66HGZ1htypt9lI4jR67QBRccHjsbrS2PpfnW\ncBw5csXYWVgrfY3KbVcrO40a7by5XNuj1BKWdVxL+aNlcPnHko5KukjSRyU9qWQ+r06FTfOsOhSW\nvUuw7aeoS1pNafusw2f+NumWpVHsJFrssFmn+JL0sndW+uR7sVjUvh/U51gJ1WafxeRTVvm8xDwm\n+z62q/Ibqmn5Nnnsc5+Hph2z3GNsV8xjoO22hVzXi9/7bF+XvMU8F0L2aRflZeU/Gru4bNP2VK3f\nZ/u7lGNT/kPyVLL8wbinbOKBmaSrJP2apM9mn1+RdJXPsrE/kp4p6f25v69RNhq1MJ/3zgrdqb4/\nerEPri4ncNuTtku6TeW4mp4Pmuq02XehQ/Dr0vEpjzblNITQ4ye8jLq9VaPLsV2V3xBNL6oPDXSb\nyjGG0LRjlnuM7YqVl9VIwxjb1zRf8e+60eply4x1LoTs0y6qyqps3VXXZt90Qs63qn3psy2h59jB\nafXXxpLlWwdqN0j6AUkXZp8XSbrBZ9nYH0n/QNK/y/39QpU8KsRnZ/me4MUd0O0kO/gsmSFO4JBl\nmn602uZ9lW7dsnXK9kmbMumznNuU0xBCtyvmMdn3sV2V367ls/97v0C0Pt2NVnkLyXNV2l1uLruu\nOzT/sfLSJs2m+cr+rtu+rjf1sc6F4qfuBrZJU3DatN35ecuWL+al/fnWvC/rtCn/NnkqWf5A3OM7\nmOCjzrlS09V3AAAgAElEQVSnNk0bgpn9A0nPcc79cPb3CyU93Tn3Y4X5nHRB9tfDWraSrrrk7Wpj\nY0O7u6ZlWe1q2Q3P7fteUjbPrpZt/KvvH9TGxsWNy1d/X1z+wUL6fvk7dOiQ7rlntyR/u7rkkkuy\n7x7QBRdcoIcfvuh8Wvu3bfn9uXMXy7lz+9J/8MFHyLkven2/l34x/w9oY2NDDz30UG6eB3X06ON0\n5swZHTp0SA888EDh+/3LV61/d9d00UVO5849VFh/vnyL2y9ddJH0yEceqigf/+1bfb9/3xws/7Lv\n88ubfVlu2w6WX9Xydd/Xrz9fPsVjx2f7lstLKuy3/cvH+F5Slo+D5XPo0CHde++9pftmxSf9vfMs\n/Puq9C+55JLzx/X+Y/fg9weX9yvfvfO/eA33+75825brv+SSR+uBBx4oKXuf5ZvKb2/7qtZf/f3e\nNaVu+44ePaq77767dvu3trZ0+vTZyu8Ppr+6Dj9wfv/VbX9d/g4un/8N2Nv+8jLYK9/y/dNUvk3L\n++/fuuXLt7/p2AjLX3kafse3pIr9419+bff/3vf3S8pv38NyJYMJfGuxflfLmqsLss8LJf2uz7Kx\nP1o2ff5W7u/Kps868oiM6/oxdRE7vao0fdbhM2+bdMvX1b15rCxPbcskRH6ZrnkPzWfMj882hu/X\n/WXTh/rtiltL7VxYrXLTOovfd81fXb7qyqhqG+q2L+RYin08ds1L00O0fY6jsnnDttX/AerF9fnl\nub5MisdfaBoxj83mdYc9dLkuvdD5Q7Yj5nFeMe/BuKds4oGZlh333yvpz7Xso/brkh7ns2zsj5aB\n4mowwcVaDia4umS+ysLJF1CVuqcStznxytYdK726fDato9uBGfZKkJgnfteTMvQ1Pvl1xTjZY5dL\n86d5X7U9Jotl04fQso19jPlsl296XfNXl682x6DPd32VeYiQdELfdBJyjrbZ1lBVy4Q0pRbLoY9j\nr+4Tq3+w737pMn/I+vvOv2sTqGkZGL2iab4hP5K+RdInJd0q6ZqKeSoLJ19ATWKdeE1pdtX2YOl6\nYMbOo+82dD0pQ+WXG+piE/vju42hZSTtH73bh5AOuc7F6ZPVtfzK0mu6Aey6X9scAz7f+aTVxzHZ\nNi8+2vbFDd1Wn6CxbH0+eQndP1Xb3cenS95X5RayX0L3Y1/nWNf8uDaB2jIt/YHPfCl9mk5e3xO8\nasBBF7HTq0qzy4mTF6sJuDmPzU2jZWm1WV+o/HIxTvawconz8d3G0DIqu2uPrenHpUzXcupaftL+\nH2nf9xd22a9tjoG2ZRijvEPESqcuTZ/5Qre1bb588xyyf0LTiHVctllvfv7Qsuhadl3Osa75cSXx\njO9ggv9Dy97479L+NxN8uHHhkZiZq9u2kKcwx3rqeV/pVaXpsw7fd/b1/STyxWLR8GDADW1ubunM\nmVOSlg9DfNWrXqfLLrvs/LSQ9YWWt88Tt5tUrbOvJ/n7rr8qH22OyVjvsaxKu4rfse1nlVZoeYSc\n1zH2+eqcya+jKd26cgotQ99rRGh+qvTxdo82b2AJvQbEPo9Cnr5fleYQ15yu52S+nEPLIvZ5F3KO\ndc2PKxlM4Buo3Vi+bvdNzVkcB4HaQSEnTh+BWt2rNHwufm2Dq5hpzTtQ23t9ks/85WlMMVDb/2Ls\nqQRqzrnzL7H2TZdArT5NArUuys+jYh58TS9Q27/9bfNTFqg1vkLKzB4h6U3OuW8sfJIN0vq1oc3N\no2Nn4oDFYjF2FhqVvRKkz3xvbh5Ncl+la76vT6rXtN3pvn5nLq/ZwRxM6/oR/7env+1vDNTc8iEm\nP9FbDkYSspP2z7tb2dQWLt4PQMwL9pBBX58/NGfOnIq4rzC+sQKmFH6A0g0W95tKPrtZXSP7uhFM\n98Z7Pvt3Ujc5ZR3Xih9Jr5H045IeK+my1cdn2bE+qunAt+IzT37e0MdR1KW11zk6TpqrdOs+vsv4\nzhf6iIuydJzb62Rd1WF8sVi0GjlVl/e2aVSl5/MJyV8fH79t7Pb0/LbL+abd9diu/hzc7nblN9w+\nb5Nu3TKh6cXYphCx0qlL02e+/LSmfPVxPrQt27pju49PWN4PDiTLz+9fFvXPratKP2RbYh7nFfMe\njGfKJh6YSfqTks9nfJYd6+NzgoScRKvRnzH4HoRt0o1x4nSZLzSPfa0nr83DS6vyVZXH2CdrH58m\nxdG9bcQ8nsvS7npsh5RTaPkNvc9D06262Wmb3sF5wx5oHXrz1eXY9k3TZ778tKZ89XE+tD0+6o7t\nPj5d8l4s29CyqJJ/ikPbsoxVFlVpubaB2hQ/PidImwtFDKuaqNgncqwTp8t8oXnsaz2h6/VdviqP\nsU/WoS6cdXlpI+bxXJZ212M7pJxCyy+kzGM8yypGGeWX6ZpeH8dj120LTdNnvvy0unwV320cS9vy\nrTu2+/h0yXuxbEPLwqf82pZlm3M3JP8uNFCT9BO5/z+v8N2r6pYd+9PXCRI7vZhpxjpxuswXmse+\n1hO6Xt/lq/IY+2Tt4xNaTm30cd6t+LzouZiXkE+x1jy0/ELLvI/92Wb/b24e9Xp1Uptzt+vx2HXb\nQtP0mW+l/OHF+5vQ+zgf2pZvX8/x6+uczM8fWhY+5delLGMd6xXzHohnmgYTvCD3/2sL331Lw7Jo\nkG6H0fGs5yjN9Drotj02+zym++78u64DT2IOulmna1r58ZjCwJNyk+o8H2T/9XOWx2BZ9Lb6SPpI\n2f/L/k7to57uZFJOUy2iet/+W2VvaIiRx7bz9LFen+XL0vL9+Oatr0/odqYoZNvalE9VrUPsd0e2\nyV/xHAxNs42Q9ELPjz7z0jZNn/l887X6LrYY5bs3X1i/wq7Xm9DlQ/aL77FQln7otsQoi4PpnB8I\nEVyj5ir+X/b37PURqR8/fjx6miF877Ji3XGvZ43ZdIx9PI6t6nxIoTYijRq/9Gp/hzHX7d5fAxjj\n+jzLGq3WQp67Wl0bW/tmAjN7WMtXRpmkL5N0/+orSYeccxd55mBwTW8mmKO2T/Zv83TuuvmaFJ/y\n3dd6Yqa5Dm8mWOnz7QJdhTyJPLRci2mYWelrmkLy1nB9Dc5f6Lnjm5cqIemt3pLQ9sn5zXnZ/+aM\nLmntpdnuzQR1aeTn6+NcilG+TXnuom67h3gzQVN5t7mW++5zn2Wb0nGhbyZwzl3gnHu0c+5RzrkL\ns/+v/k42SAOAGFKoSUtNVY1J/2WVbv+vorFrlcZef1u0uJRrfDMBsHLRRY+KltZisZjsxSRcffX3\n+pQDpmuv6W9+wWv8Zs2xy2js9Vepu9YtFotEmvcTVNZxbQ4f9dCJM3WK0qHRrxNq1zcF+KzDJz8h\n6+ySZn65pnIOKfuq/JV/2nb8DXv7RcrnTkj5dt1Hq2m+x3oxvabl2uSv3TbXP609NI+r6V23K0Ze\nul4j2lwjffKV/y62mNeb4mAy3/R9jtPQ/Be/L/7fNy3fbQ/ZVt9tCM1PxfwH4hlq1NBKlzs2apDa\natv0E/P9tOsn7FhPseYpvSbDqQ1aWV2z5nbtGuMYnVsZDoFADYNL5wcMZbiQdpFeUCTF36dh6R1s\nWtzZ2YmWlyGsrlmh167hz6WQUYbj4PofrnbU55St46jPra1jOnv2dOX3VeVhZjp8+HLdd9+9kna9\nRqn0WbZzHPXZtL6+R37O5VwYetRnSLmFHmNDjvpsu/+7jKqr0yY/sUe0SgevmU3XPt8yH/L62Gbd\nVdeztte34vqbzp26MivLW91vV1U6TesO2daya4Mvv3LY0Obmls6ePR0+6hPT0qV56957P6f0agPi\ndfJd3mXO9VlISElaA2U45uucOXMq21eUE8oMcVxsqKl7CoEa9kmr78hutB+85Umwqyk0DSCOsYKl\n1fPEmhw81/r4UUjt5qu9vvbncl/Fu9akE6RPV5+/Q2H7Z4jzp3kdNH3OTJvmgfyDKpurjZcPnRyq\naj/mero02/bf9Ll6mOeG+rg4zOVcCG3a69JE0bbpM3wZv32+7k2fdWl3Pb79rn1+TZ99n2v9NH0u\nj8FUmj73/l//e9O22bnrw5n7eOBtrtxo+sRBYZ0753OHnpbdwr8YyvhNlexzX4cPXz52Fmps6PDh\nS8bOREtpHoOLxTW9pOvzm5dSzSiB2ppI6aBbNz5lz/4Z3qrMq5oqw/cJzeplYh7by760qdrVvffe\nPXYmvPR9vYmV/pgjRFManUrT58x0aRrwrf73Ta+t1Js+T5w4oZMnT3ov67u+Pkd+zuVciNn06dNE\nE5q3tqOJfYzT9Hko+99ejUto02dZc1qXMu9jlGWsps8hzrMYTZ+rdPoa9emz7qrliuVct2+6Hgs+\n14eyNGn6RNKmXPOT/l2eT41MSIdzRrKhm2XTU5rNYpiDdb9G+W0/gRqCDFUd3Meon5Sqssv5vEEg\nZHQaP7DoZnXOTPkGDX7G2cfrfo1abn9T2ROoIdgQJ3RfTy6f7g9Oiq8mwroIOebKz7F1rzlJX6rX\nlSlds9v2UW0qewI1BEv1hPYx3byv+51nXFO4+E8hj2XKa+E4fudi6OPS75qdxo1AX+9UJlDDeVP9\nYUC9ue/XNtuXSsC+ynvZnXhZHqc0qrSY/ynlvczczqO225PKubPfvG8EGPU5M309EHJI+dFIqeS7\nOPon1qif4jp8Rl0dnKf+gamplGEMoaO8qkboVo0w65q3tiOKq0ZGlo0oNDMtFovSH8w+zv9i/kJG\nkK/+3XvA6CFtbm51qnkYa9SnT36mNOqzmJ7vta3pGhUy6nOxWJw/P9uck6mN+gwd4VxW9oz6BCao\nuSZi3neTXSyDmTSaRar0XSM4Rk1QcZ17+fUZMDMtU68pHFOs2rkp13Z65d05N8vPctPWj6TSz5Ss\n8ptSvjc3j+7LT1U5dyn748ePl6ZdnNbX+qegzfbtn3/jwH6MZbFYdFo+n89VWmXbWZfnzc2j54/V\nWPu/eMy1WXalaxnl89HHNnbN0xBin+/F5RaLRWP6Xddfllb+uzZ5b3t8+myn73Jl3zWtv+TvA/EM\nTZ8zs/fOyP2mVBYh7x4d0v530MVv+syvp7h8l4dSplSGXcV692R+P6ZSPlXNnGXTQra56/a1afos\nLhtTWbN/rG3smqchjqXYTZ9bW8ck7e8I79skWFTVJF9U9u7kNudkvhtA+3ftlqs75mM2fea/r2r6\nvLAyBUzU9JvBUn12U2r5ATD9693YYjZFt2vKrO9j28860+D7m0KghmSldgKmlh8fBJcH5ctkGuWz\noc3NrbEzAfRkfYNt398UBhMAMzbF4LJv+TKZQvkcP/7MfbUeQweXdY8Q8V0W83T48OVjZ2EtEKjN\nWtqj3YAhTCVYqMpn8S0dQweXq/W1aSKbQiCM9u6993NR0pnKORoi5jYxmGBm5vActSkYezBB1fPB\nuq47dVtbx3T27Ol903y2cehnXbXVpWN1WTr5tGJIYfBFas9RWy0fIx8h66oSIw8hnezbHGvF5Us6\n1HunUxx4k8pggrJt88lP2WACatRmZo53JjhoXWsq5vYMrqnh+gIMj8EEM+Nb04Jp4QdyPaW239f1\nBgFoI9b5S9PnDPXRNID9hm76bJuHOe734s3InJs+u6YTI63UFI9732d3NaVJ06ffOmj69G/6DFXV\n9EmgNkMEav1LN1Db/0yiue730B+HI0eu0H333ek9/1gI1JqFPFA0JE0CNb91EKgNH6jRR22GUmsu\nwZDW65lEvsd6rNFpADA0atRmqo+7TuxJt0at27qnosvdc8plQo1aM2rU+q9Rq+vrTI0aTZ/REKgR\nqPWJQG1cBGp+6cRIKzUEav0HanXrIVCj6RNAK3sPN6bpe7o2N4+2egMAgH6kcD1NMlAzs4WZ3W5m\nH84+35L77lozu9XMbjGzZ4+ZTyAde33TeITCdJ05cyrKs+JWPy4p/MhMAeXUZH3fcpPC9TTJpk8z\nW0j6gnPudYXpV0t6h6S/IekqSb8j6SvL2jhp+qTps08pN312rX6fgrk2fcbUtTkvVSle28wOaXNz\na5AHMs+96fPEiRPewdEQTZ9l6e1fbm+k/To2fZaV4LdLeqdz7iHn3ClJt0p6+qC5ApAEakGQjl3e\nmhFJCjVYYfofaZ9yoPajZvZRM3uzmV2STbtS0m25ee7IpqEGP2jxUabjOn78+AQv6JireV8P1qXZ\nM93tHK3p08xukLSZnyTJSfopSR+U9DnnnDOzn5G05Zz7ITP7OUn/j3PuHVkab5b0Pufcr5akT9Nn\nZp3LoU++zZ80faZh3cpkHZo+Y7yVYGrm3vQZmsfxmz4PLhOaj3y6ZU2fo73r0zn3zZ6z/ryk67L/\n3yHpsbnvrsqmlcqfwNvb29re3g7KIzCGxWLR+X2t877DB5bWLUgb3v43nfRhna9VOzs72tnZaZwv\n1cEEW865M9n/XyHpbzjnvtfMnizp7ZKeoWWT5w1iMEEpatT613Rnu3rMQpu+Kz77r+6uDgdRozYP\n635tS6FGbfVA3Bg1al3zuA41aqn2UfvfzexjZvZRScclvUKSnHM3S3q3pJslvU/SS9c6GqvB8Pzx\nxXrUAgCkJEZNZsq/TanlLckatRjWvUZNWjb3+lSrop0+72zNrLFGjhq1MOtWoxbymIMpoUZt/Bq1\n1fddatRiv1EiZo3aKo2qc2joGjUCNaClvgO1puWL69/cPKqzZ0+v5Y+XD7NDknYpn4lb90Ct7j2c\nEoFazECtzXIEagEI1NC31AK1riOo5m7datTmat0DNanq2rPs+N9foLax76G+q2vN1tYxnT17WhKB\n2rr1UQMQILU+FUBfONar7PZcNuUP9aUfbv+oUQNaSqlGrdgcgYOoUZuPdd+XQ/RPLVtHPv39tVlh\nr9CiRq06XWrUgJmjtgFATH7XFF6h1ScCNWBG5jjKDyjDTckwVteUeZZ3uq+NyqPpE2gpxaZPVDOz\ntXzl0BytexP/kE2fVYOUis2OoU2ONH2Wp0vTJzAr07gbTAVBGpCGedbO9YcaNaCluiHyEjVqQF+o\nUZt2jVrMPI5bo7b/XajUqAGT0O8LjAFgaNSAlVssrpG0917nvlCjBrTUZx81n9f/UKOGdUWN2rA1\nalXfr3uNWr62sfimBt5M4IFADX0b6p17PuvnWMc6IVAjUCvLg9Q2UFu+dcH3DQtDB2o0fQITtWqO\noFkC64ZjHnGl/Rw4atSAlsauUVvlgeMcWC+p1aj5dNXoQ5e3I6yWXwmpDaurUTtx4oROnjxJ06cP\nAjX0jUANwBj2X3vijDSvWodPoDaWrs2vfQRqbfOSW46mTwAA5oOR5m311YQeO11q1ICWqFEDMIbU\nmj7HEqsWS4pbo9YWNWoAAAATQ6AGAACQKAI1AAAAT0M/HubCQdcGAAAwYWWPIukzeGMwAdASgwkA\njIHBBAfzMORggqo8dMVgAgAAZoA3M6RjiH1BjRrQUgo1aseOHdOpU6d6Xw+AtJRdf6hRG75GLSZq\n1IABDXXHS5AGAPNGjRrQUl2NGscegD5Ro0aNGoBGG2NnAAAkbWhz8+jYmUBPqFEDWqJGDcBYitef\n2NccatSGR40a0Ctq1wAA8fHAWyCK3bEzAABRrcdjQDa0ubk1diZq0fQJtETTJ4CxDNH0WZfmnJo+\n82lINH0CAAB0th41ftSoAa1RowZgLNSo7UeNGgBv63KXB2B9cZ0bDoEaENmJEyfGzgIAdNIUiKV2\nnZtz4EjTJ9BSVdMnxx2AvuWvP4vFIrnAaSqm0PRJoAa0RKAGYCz56w/XnPamEKjR9AkAwATx2qj1\nQI0a0BI1agDGsqoJSm305dRQowbM2Jw7rwJIG9ef9UGNGtBBWa0axx2AoVCj1g01agAAAGiNQA0A\nACBRBGoAAACJunDsDADzsaHNza2xMwEAmBFq1IAO9o+82tWZM6fGygoAINAURs8y6hPoaDVSiNe4\nABgaoz7jYdRngZl9l5n9kZk9bGZPK3x3rZndama3mNmzc9OfZmYfM7NPmdnrh881UI0gDQAQ25hN\nnx+X9J2SbspPNLOrJT1f0tWSnivpjbb3sKo3SXqxc+4Jkp5gZs8ZML9AhQ1e5QJgFFNoukM3ozd9\nmtmNkv6Zc+7D2d/XSHLOuddmf79f0glJpyV9wDn35Gz6CyQdd869pCJdmj4xCJoeAGD6aPr0d6Wk\n23J/35FNu1LS7bnpt2fTAAAAZqnXx3OY2Q2SNvOTJDlJP+Wcu67PdQMAAExdr4Gac+6bWyx2h6TH\n5v6+KptWNb1SvnP39va2tre3W2QHqHf8+PGxswAAmJidnR3t7Ow0zpdKH7Ufd879Yfb3kyW9XdIz\ntGzavEHSVzrnnJl9UNKPSfqQpP8k6Q3Oud+qSJc+agAAwAt91ArM7DvM7DZJz5T0m9mgATnnbpb0\nbkk3S3qfpJfmIq6XSXqLpE9JurUqSAMAAJiD0WvU+kKNGgAA8EWNGgAAAIIQqAEAACSKQA0AACBR\nBGoAAACJ6vU5agAAAFOQ6jubGfUJAAAwMkZ9AgAATAyBGgAAQKII1AAAABJFoAYAAJAoAjUAAIBE\nEagBAAAkikANAAAgUQRqAAAAiSJQAwAASBSBGgAAQKII1AAAABJFoAYAAJAoAjUAAIBEEagBAAAk\nikANAAAgUQRqAAAAiSJQAwAASBSBGgAAQKII1AAAABJFoAYAAJAoAjUAAIBEEagBAAAkikANAAAg\nUQRqAAAAiSJQAwAASBSBGgAAQKII1AAAABJFoAYAAJAoAjUAAIBEEagBAAAkikANAAAgUQRqAAAA\niSJQAwAASBSBGgAAQKII1AAAABJFoAYAAJAoAjUAAIBEEagBAAAkikANAAAgUQRqAAAAiSJQAwAA\nSNRogZqZfZeZ/ZGZPWxmT8tNP2pm95vZh7PPG3PfPc3MPmZmnzKz14+TcwAAgGGMWaP2cUnfKemm\nku/+2Dn3tOzz0tz0N0l6sXPuCZKeYGbPGSKjqdrZ2Rk7C2uHMh8eZT48ynxYlPfwplTmowVqzrlP\nOudulWQlXx+YZmZbkh7lnPtQNumXJH1Hj1lM3pQOtLmgzIdHmQ+PMh8W5T28KZV5qn3UjmXNnjea\n2bOyaVdKuj03z+3ZNAAAgFm6sM/EzewGSZv5SZKcpJ9yzl1XsdifSXqcc+7zWd+1XzezJ/eZTwAA\ngBSZc27cDJjdKOmfOec+XPe9lgHcjc65q7PpL5B03Dn3korlxt0wAACAAM65A12/eq1RC3A+Y2Z2\nhaS7nHPnzOzxkv6apM845+42s3vM7OmSPiTp+yS9oSrBso0FAACYkjEfz/EdZnabpGdK+k0ze3/2\n1TdI+piZfVjSuyX9iHPu7uy7l0l6i6RPSbrVOfdbQ+cbAABgKKM3fQIAAKBcqqM+15KZXWVmHzCz\n/25mHzezH8umX2pm15vZJ83st83sktwy15rZrWZ2i5k9Ozf9IjP7t9kyN5vZd46xTamLXObfkz2Q\n+aNm9j4zu2yMbUpdaJmb2WXZ/F8wszcU0uIh2B5ilbmZfZmZ/WZ27H/czF411jalLOYxnkvzvWb2\nsSG3Y0oiX1eS+v0kUEvLQ5L+qXPuqyR9vaSXmdmTJF0j6Xecc0+U9AFJ10pSNhr2+ZKulvRcSW80\ns1XfvJ+SdNY590Tn3JNV/mBhRCpzM7tA0uu1HODyVC0f6Pyjg2/NNASVuaQHJP1zLQcVFfEQbD8x\ny/xfZoO6vkbSsyjzUjHLW1mg8Be953raYpZ5Ur+fBGoJcc6dcc59NPv/vZJukXSVpG+X9IvZbL+o\nvQf9fpukdzrnHnLOnZJ0q6SnZ9/9oKRX59K+q/cNmKCIZb4KkB+VBcuP1nKkMgpCy9w5d79z7r9K\n2s2nYzwE21usMnfOfdE5d1P2/4ckfThLBzmxyluSzOywpFdI+pkBsj5ZMctcif1+EqglysyOSXqq\npA9K2nTOnZWWB6Okx2SzXSnpttxid0i6MtdM9zNm9odm9i4z+8uDZHzCupR59qP1Ui1r0m7Xssbt\nLYNkfMI8y7wKD8FuoWOZ59P5S5K+VdLvxs/lfEQo75+W9K8kfbGnLM5OlzJP8feTQC1BZnZE0i9L\nenl2Z1Ac8dE0AuRCLe8kfs8597VaHqz/OnpGZ6RrmZvZhZJeIumrnXNXahmw/WQfeZ2LCMc5AsUq\n86yp/x2SXp/VLKNEhOvKV0v6q86592pZa89jpxrM8feTQC0x2Q/+L0t6m3PuN7LJZ81sM/t+S9Jn\ns+l3SHpsbvGrJN3hnLtT0n3OuV/Lpr9Hy/4kKBGjzLW8e3O5H613a9lPAiUCy7xK1b5AiUhlvvLv\nJH3SOfdz8XM6D5HK++slfa2ZfUbS/61lP8wP9JXnqYtR5in+fhKopecXJN3snPvZ3LT3SnpR9v/v\nl/QbuekvMLOLzewrtHw48B9k311nZt+Y/f/vSrq511xPW4wyv0PSk83s8my+b9ayjwTKhZR53vka\nhawZ4x4ze3rWL/D7KpbBUucylyQz+xlJj3bOvaKPTM5IjGP8/3LOXeWce7ykZ2kZHH9TT/mdgyjH\nuBL7/eQ5agkxs78l6T9r2Wzmss9PahkIvFvL2oPTkp6/egiwmV0r6cWSvqRlVe/12fTHSXqbpEsk\n/bmkH3DO3S7sE7nMf1jS/yLpwWyZFznnPj/oBk1AyzL/E0mPknSxpLslPds59wkz+1pJ/17SIUnv\nc869fNitmYZYZS7pC1r20bxFy+PcSfo3zrlfGHJ7UhfzGM+leVTSdc65pwy4KZMR+bqS1O8ngRoA\nAECiaPoEAABIFIEaAABAogjUAAAAEkWgBgAAkCgCNQAAgEQRqAEAACTqwrEzAABjMbPLtHxXpZP0\n5ZIe1vLJ5abl08mfNWL2AIDnqAGAJJnZ/yrpXufc68bOCwCs0PQJAEvFVyV9Ifv3uJntmNmvm9kf\nm9mrzex7zez3zey/Za8Sk5ldYWa/nE3/fTP7m2NsBIB5IVADgHL55oanSPphSU+W9I8kfaVz7hmS\n3m3swD4AAADOSURBVCLpn2Tz/Kyk12XTv0vSmwfMK4CZoo8aADT7kHPus5JkZp+WdH02/eOStrP/\n/11JV2cviJekI2b2SOfc/YPmFMCsEKgBQLPd3P/P5f4+p73rqEl6hnPuS0NmDMC80fQJAOWseZZ9\nrpf08vMLm3113OwAWEcEagBQrmpIfNX0l0v6umyAwR9J+pF+sgVgnfB4DgAAgERRowYAAJAoAjUA\nAIBEEagBAAAkikANAAAgUQRqAAAAiSJQAwAASBSBGgAAQKII1AAAABL1/wORMZW/D1fPpQAAAABJ\nRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x119be49d0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "preds = lm1.predict()  #Get the predictions for our training set.\n",
    "errors = preds - df[\"predict\"] #Calculate the errors\n",
    "time_data = np.array([df.iloc[i].name.to_datetime() for i in range(len(df))]) #generate an array of dates \n",
    "plt.bar(time_data, errors)\n",
    "plt.ylabel(\"Errors\")\n",
    "plt.xlabel(\"Time\")\n",
    "plt.title(\"Errors vs Time plot\")\n",
    "    \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "It's very easy to see that assumptions 2 and 3 are clearly violated. First of all we see that the errors don't have a constant variance. Secondly, there's strong correlations amongst errors. How can we say that? we see postitive errors are followed by positive errors while the negative ones are followed by negative ones. When such correlation happens in a time series, (like stocks here), it's also known as **autocorrelation**(In this case, it's positive autocorrelation). Infact, to conclude whether the errors have a correlation by having a look at their plots can be a tricky bargain if the results ae not as obvious as they are in the graph above. Thankfully, pandas provides us with a an option to calculate autocorrelation. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "errors.autocorr(1),errors.autocorr(2),errors.autocorr(3),"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The parameter of the function is the lag between the errors for which the autocorrelation is calculated. The autocorrelation in our model is alarmilngly high, and therefore this model can't be trusted. Although, we've got enough evidence to reject the model, let's also check whether the errors are normally distributed or not.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.text.Text at 0x11a2a7490>"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x119be41d0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "errors = lm1.predict() - df[\"predict\"]\n",
    "plt.hist(errors, bins = 100)\n",
    "plt.xlabel(\"Errors\")\n",
    "plt.ylabel(\"Frequency\")\n",
    "plt.title(\"Distribution of Errors\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The problem of normality with errors is not as big as the problem with other two assumptions, but we could still improve on this front. \n",
    "\n",
    "Now, what can we do? An alternative is to also include *Volume* feature while training model. A lot of times, the  violations of assumptions can arise if we leave out important features while training the model. Then, the errors we observe will contain the unmodelled effects of such features, and thus, will violate the assumptions. Let's give it a go. \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>         <td>predict</td>     <th>  R-squared:         </th> <td>   0.966</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.966</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>4.358e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Sun, 16 Oct 2016</td> <th>  Prob (F-statistic):</th>  <td>  0.00</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>19:44:24</td>     <th>  Log-Likelihood:    </th> <td> -14917.</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td>  3031</td>      <th>  AIC:               </th> <td>2.984e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td>  3028</td>      <th>  BIC:               </th> <td>2.986e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>     2</td>      <th>                     </th>     <td> </td>    \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>    \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "      <td></td>         <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th> <th>[95.0% Conf. Int.]</th> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Intercept</th> <td>   11.4546</td> <td>    1.984</td> <td>    5.772</td> <td> 0.000</td> <td>    7.564    15.346</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Close</th>     <td>    0.9544</td> <td>    0.004</td> <td>  241.714</td> <td> 0.000</td> <td>    0.947     0.962</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Volume</th>    <td>-3.782e-07</td> <td> 8.66e-08</td> <td>   -4.369</td> <td> 0.000</td> <td>-5.48e-07 -2.08e-07</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>53.552</td> <th>  Durbin-Watson:     </th> <td>   0.073</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th> <td> 0.000</td> <th>  Jarque-Bera (JB):  </th> <td> 106.582</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>          <td> 0.014</td> <th>  Prob(JB):          </th> <td>7.18e-24</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>      <td> 3.918</td> <th>  Cond. No.          </th> <td>3.94e+07</td>\n",
       "</tr>\n",
       "</table>"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            OLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:                predict   R-squared:                       0.966\n",
       "Model:                            OLS   Adj. R-squared:                  0.966\n",
       "Method:                 Least Squares   F-statistic:                 4.358e+04\n",
       "Date:                Sun, 16 Oct 2016   Prob (F-statistic):               0.00\n",
       "Time:                        19:44:24   Log-Likelihood:                -14917.\n",
       "No. Observations:                3031   AIC:                         2.984e+04\n",
       "Df Residuals:                    3028   BIC:                         2.986e+04\n",
       "Df Model:                           2                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "==============================================================================\n",
       "                 coef    std err          t      P>|t|      [95.0% Conf. Int.]\n",
       "------------------------------------------------------------------------------\n",
       "Intercept     11.4546      1.984      5.772      0.000         7.564    15.346\n",
       "Close          0.9544      0.004    241.714      0.000         0.947     0.962\n",
       "Volume     -3.782e-07   8.66e-08     -4.369      0.000     -5.48e-07 -2.08e-07\n",
       "==============================================================================\n",
       "Omnibus:                       53.552   Durbin-Watson:                   0.073\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):              106.582\n",
       "Skew:                           0.014   Prob(JB):                     7.18e-24\n",
       "Kurtosis:                       3.918   Cond. No.                     3.94e+07\n",
       "==============================================================================\n",
       "\n",
       "Warnings:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "[2] The condition number is large, 3.94e+07. This might indicate that there are\n",
       "strong multicollinearity or other numerical problems.\n",
       "\"\"\""
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lm2 = smf.ols(formula='predict ~ Close + Volume', data=df).fit()\n",
    "lm2.summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Again, we have stellar quality paramters but let us check on the assumptions front. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.text.Text at 0x121279bd0>"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAmoAAAGJCAYAAAA66h/OAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAIABJREFUeJzt3Xu8Jlld3/vvj7nslm6YzCXsbWagWxKBwRNENIAJsbcm\ngpwTb4kgGqIoHg1g5JD4khlNztP90sPlJOEg5sBJBIkSCBevjAGdUWZPjslBOQIBMwOMYLcz4+lG\nZpiRmWH2MNPr/PHU07t27bqsVbWqalU9n/fr9by6dz1Vq1atujy/Wpcqc84JAAAA6XnE2BkAAABA\nOQI1AACARBGoAQAAJIpADQAAIFEEagAAAIkiUAMAAEgUgRoARGRmjzWzvzAzGzkfR83snJlxnQcm\njBMYQFRmdsrM7s+ClS9k/75h7HzFYmZvym3Xrpk9mP3/L8zsPznnbnPOPdql8ZBKrzyY2cLMfqnv\nzAAId+HYGQAwO07S/+Scu7FpRjO7wDn3cNO00DT65Jx7iaSXZOteSPqrzrnvG2r9ANYLNWoA+lDa\n7Gdm329mv2dmrzOzz0laVEwzM/vnWe3cGTP792b26CyNVZPeD5rZaUm/a2YbZvYfzOxzZvZ5M/t9\nM/vLJev/CTN7T2Haz5rZ67P/v8jMPp3Vjn3azL4neMMLTY5mdqOZ/bSZ/ZesJu43zOyyLL/3ZHl9\nXG75J5nZ9WZ2p5ndYmbPq1nXjWb2qiyNe8zs18zsL1XM++XZuu80s0+Z2Q9l058j6SclfXeWv4+E\nbjOA/hCoARjaMyT9saTHSPrfKqb9gKTvk3Rc0uMlPUrSvymk8w2SnijpOZK+P5vnSkmXSfrHkr5Y\nsu53SnqumR2WpCyYep6kt5vZIyX9rKTnOOceLelvSvpoy20sNjl+t6R/KOmvSPprkv6rpLdIulTS\nJyQtsvw8UtL1kv6DpCskvUDS/2lmT6pZ1z+S9CJJW5IelvRzFfO9S9KfZvM9T9KrzGzbOffbkl4l\n6V3OuUc5574maEsB9IpADUAfft3M7spqt+4ysxfnvrvDOfdG59w559xuxbTvlfQ659xp59z9kq6V\n9IJcx3gnaeGceyCb/0uSLpf0BLf0EefcvcVMOef+VNKHJX1nNunvSLrPOfeh7O+HJf11MzvknDvr\nnLslUnm81Tl3yjn3BUnvl/Rp59yNzrlzkt4jaRUc/T1Jf+Kc+6VsO/6bpF/VMrCq8jbn3C3OuS9K\n+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\nTtQ+heyjLsdezOO5y77sWk5dyq9smfy0GOIe89X9Y2Ot2z8v4cdArGOqad422zrkeeC7vjKr53d2\nkU+jyzHi21+2KGTbm/JS997tUL7bkP19IJ5p7KNmZhdIeq1z7sdrZ0yMfx+18iH3x48f187OTtM6\nWuWtWOYx+zBU7c+uj2Zok65v3lbpeByLpWkN3UetKd3QdYWm1VYffdRiLRuSfplY/WHq+pS16aNW\ndszE6AdUl59Yx3xdemXvgQ19B2KsvLRNqyy94fuohT+uJuQ6GZJGjMfI5NNoc3zm31Pqcz3pco42\nnYcx+9r5bkPrPmrOuYclPSsoV5NSfpLcdNNNtUulPjx7CijDdTKNfmr99SlbPsIijcdY9IG+YO1Q\nbnlD9IcO+d0Zs99lnu+ozzdJulLSeyTdt5runPvVXnIVQdsH3ha/r0m/XcZK0l3XGrXiXRM1av2i\nRq1ZvoY9do1a17wVpVWj1rzuvvLSNq2y9OY86rMpjRRq1PK1WH3VqOXz1/ZcqTsOi9/la+mb0uo6\n6vOQpDslfZOkb80+f89z2ejM7FvM7BNm9ikze2Vf66HGZ1htypt9lI4jR67QBRccHjsbrS2PpfnW\ncBw5csXYWVgrfY3KbVcrO40a7by5XNuj1BKWdVxL+aNlcPnHko5KukjSRyU9qWQ+r06FTfOsOhSW\nvUuw7aeoS1pNafusw2f+NumWpVHsJFrssFmn+JL0sndW+uR7sVjUvh/U51gJ1WafxeRTVvm8xDwm\n+z62q/Ibqmn5Nnnsc5+Hph2z3GNsV8xjoO22hVzXi9/7bF+XvMU8F0L2aRflZeU/Gru4bNP2VK3f\nZ/u7lGNT/kPyVLL8wbinbOKBmaSrJP2apM9mn1+RdJXPsrE/kp4p6f25v69RNhq1MJ/3zgrdqb4/\nerEPri4ncNuTtku6TeW4mp4Pmuq02XehQ/Dr0vEpjzblNITQ4ye8jLq9VaPLsV2V3xBNL6oPDXSb\nyjGG0LRjlnuM7YqVl9VIwxjb1zRf8e+60eply4x1LoTs0y6qyqps3VXXZt90Qs63qn3psy2h59jB\nafXXxpLlWwdqN0j6AUkXZp8XSbrBZ9nYH0n/QNK/y/39QpU8KsRnZ/me4MUd0O0kO/gsmSFO4JBl\nmn602uZ9lW7dsnXK9kmbMumznNuU0xBCtyvmMdn3sV2V367ls/97v0C0Pt2NVnkLyXNV2l1uLruu\n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\nBGoAAACJ6vU5agAAAFOQ6jubGfUJAAAwMkZ9AgAATAyBGgAAQKII1AAAABJFoAYAAJAoAjUAAIBE\nEagBAAAkikANAAAgUQRqAAAAiSJQAwAASBSBGgAAQKII1AAAABJFoAYAAJAoAjUAAIBEEagBAAAk\nikANAAAgUQRqAAAAiSJQAwAASBSBGgAAQKII1AAAABJFoAYAAJAoAjUAAIBEEagBAAAkikANAAAg\nUQRqAAAAiSJQAwAASBSBGgAAQKII1AAAABJFoAYAAJAoAjUAAIBEEagBAAAkikANAAAgUQRqAAAA\niSJQAwAASBSBGgAAQKII1AAAABJFoAYAAJAoAjUAAIBEEagBAAAkikANAAAgUQRqAAAAiSJQAwAA\nSNRogZqZfZeZ/ZGZPWxmT8tNP2pm95vZh7PPG3PfPc3MPmZmnzKz14+TcwAAgGGMWaP2cUnfKemm\nku/+2Dn3tOzz0tz0N0l6sXPuCZKeYGbPGSKjqdrZ2Rk7C2uHMh8eZT48ynxYlPfwplTmowVqzrlP\nOudulWQlXx+YZmZbkh7lnPtQNumXJH1Hj1lM3pQOtLmgzIdHmQ+PMh8W5T28KZV5qn3UjmXNnjea\n2bOyaVdKuj03z+3ZNAAAgFm6sM/EzewGSZv5SZKcpJ9yzl1XsdifSXqcc+7zWd+1XzezJ/eZTwAA\ngBSZc27cDJjdKOmfOec+XPe9lgHcjc65q7PpL5B03Dn3korlxt0wAACAAM65A12/eq1RC3A+Y2Z2\nhaS7nHPnzOzxkv6apM845+42s3vM7OmSPiTp+yS9oSrBso0FAACYkjEfz/EdZnabpGdK+k0ze3/2\n1TdI+piZfVjSuyX9iHPu7uy7l0l6i6RPSbrVOfdbQ+cbAABgKKM3fQIAAKBcqqM+15KZXWVmHzCz\n/25mHzezH8umX2pm15vZJ83st83sktwy15rZrWZ2i5k9Ozf9IjP7t9kyN5vZd46xTamLXObfkz2Q\n+aNm9j4zu2yMbUpdaJmb2WXZ/F8wszcU0uIh2B5ilbmZfZmZ/WZ27H/czF411jalLOYxnkvzvWb2\nsSG3Y0oiX1eS+v0kUEvLQ5L+qXPuqyR9vaSXmdmTJF0j6Xecc0+U9AFJ10pSNhr2+ZKulvRcSW80\ns1XfvJ+SdNY590Tn3JNV/mBhRCpzM7tA0uu1HODyVC0f6Pyjg2/NNASVuaQHJP1zLQcVFfEQbD8x\ny/xfZoO6vkbSsyjzUjHLW1mg8Be953raYpZ5Ur+fBGoJcc6dcc59NPv/vZJukXSVpG+X9IvZbL+o\nvQf9fpukdzrnHnLOnZJ0q6SnZ9/9oKRX59K+q/cNmKCIZb4KkB+VBcuP1nKkMgpCy9w5d79z7r9K\n2s2nYzwE21usMnfOfdE5d1P2/4ckfThLBzmxyluSzOywpFdI+pkBsj5ZMctcif1+EqglysyOSXqq\npA9K2nTOnZWWB6Okx2SzXSnpttxid0i6MtdM9zNm9odm9i4z+8uDZHzCupR59qP1Ui1r0m7Xssbt\nLYNkfMI8y7wKD8FuoWOZ59P5S5K+VdLvxs/lfEQo75+W9K8kfbGnLM5OlzJP8feTQC1BZnZE0i9L\nenl2Z1Ac8dE0AuRCLe8kfs8597VaHqz/OnpGZ6RrmZvZhZJeIumrnXNXahmw/WQfeZ2LCMc5AsUq\n86yp/x2SXp/VLKNEhOvKV0v6q86592pZa89jpxrM8feTQC0x2Q/+L0t6m3PuN7LJZ81sM/t+S9Jn\ns+l3SHpsbvGrJN3hnLtT0n3OuV/Lpr9Hy/4kKBGjzLW8e3O5H613a9lPAiUCy7xK1b5AiUhlvvLv\nJH3SOfdz8XM6D5HK++slfa2ZfUbS/61lP8wP9JXnqYtR5in+fhKopecXJN3snPvZ3LT3SnpR9v/v\nl/QbuekvMLOLzewrtHw48B9k311nZt+Y/f/vSrq511xPW4wyv0PSk83s8my+b9ayjwTKhZR53vka\nhawZ4x4ze3rWL/D7KpbBUucylyQz+xlJj3bOvaKPTM5IjGP8/3LOXeWce7ykZ2kZHH9TT/mdgyjH\nuBL7/eQ5agkxs78l6T9r2Wzmss9PahkIvFvL2oPTkp6/egiwmV0r6cWSvqRlVe/12fTHSXqbpEsk\n/bmkH3DO3S7sE7nMf1jS/yLpwWyZFznnPj/oBk1AyzL/E0mPknSxpLslPds59wkz+1pJ/17SIUnv\nc869fNitmYZYZS7pC1r20bxFy+PcSfo3zrlfGHJ7UhfzGM+leVTSdc65pwy4KZMR+bqS1O8ngRoA\nAECiaPoEAABIFIEaAABAogjUAAAAEkWgBgAAkCgCNQAAgEQRqAEAACTqwrEzAABjMbPLtHxXpZP0\n5ZIe1vLJ5abl08mfNWL2AIDnqAGAJJnZ/yrpXufc68bOCwCs0PQJAEvFVyV9Ifv3uJntmNmvm9kf\nm9mrzex7zez3zey/Za8Sk5ldYWa/nE3/fTP7m2NsBIB5IVADgHL55oanSPphSU+W9I8kfaVz7hmS\n3m3swD4AAADOSURBVCLpn2Tz/Kyk12XTv0vSmwfMK4CZoo8aADT7kHPus5JkZp+WdH02/eOStrP/\n/11JV2cviJekI2b2SOfc/YPmFMCsEKgBQLPd3P/P5f4+p73rqEl6hnPuS0NmDMC80fQJAOWseZZ9\nrpf08vMLm3113OwAWEcEagBQrmpIfNX0l0v6umyAwR9J+pF+sgVgnfB4DgAAgERRowYAAJAoAjUA\nAIBEEagBAAAkikANAAAgUQRqAAAAiSJQAwAASBSBGgAAQKII1AAAABL1/wORMZW/D1fPpQAAAABJ\nRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11a681fd0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "preds = lm1.predict()  #Get the predictions for our training set.\n",
    "errors = preds - df[\"predict\"] #Calculate the errors\n",
    "time_data = np.array([df.iloc[i].name.to_datetime() for i in range(len(df))]) #generate an array of dates \n",
    "plt.bar(time_data, errors)\n",
    "plt.ylabel(\"Errors\")\n",
    "plt.xlabel(\"Time\")\n",
    "plt.title(\"Errors vs Time plot\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.text.Text at 0x12b09df10>"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n7gmcBpzfrXY+cPo06pM2Hx9fpZZsXzLoxcdVSesz9UEHSXYC3wf8M7CjqhahF+qSHD/F0qRN5GaW\nPj5ImpbBn0dYXPRnUlqPqQ46SHIX4E3AC7uWtsFhbT6MTpIkzbyptbAlOYxeWLugqt7WLV5MsqOq\nFpPMAV9ebvtdu3btfz8/P8/8/PwEq5UkSRrNwsICCwsLY91nqqbTiJXktcBXqurFfcvOBb5WVecm\nORM4pqrOGrJtTatuaT1695cd3HU5+LM8bJ1Df25tnVk9duv1Tf/ceN3WrEpCVa3rvoCpBLYkjwTe\nB3yC3m91AS8BLgcuBE4EdgNPr6pvDNnewKZNycC2lY/den3TPzdetzWrNm1gWy8DmzYrA9tWPnbr\n9U3/3Hjd1qwaR2DzSQeSJEmNM7BJkiQ1zsAmTcjc3M4lk4dKs2u7E+lK6+A9bNKELL0XDYbd6+M9\nbFvl2K3X19658TquWeE9bJKkTcoWN2k1pv5oKknSLDr48VU+uko6NFvYJEmSGmcLmzRV2x2MIEla\nkYFNmqqDu4V6DHCSpIPZJSpJktQ4A5u0BsPmWHOUmyRpUpyHTVqD5eZY6/+5HHUetq0wn5bH3gz1\ntX9uvK5rq3IeNkmSpBlgYJMkNWD7ircZrPVWhMHttm278yE/e4uDWmSXqLQGdom2Wp/nps1jr72+\nUX6nVvr7YK2Pe/PvGY2LXaKSJEkzwHnYJEmNcmJpaR8DmySpUYMTSxveNLvsEpWGGLxJ2RuQJUnT\nZAubNMTi4m76/2W/uOi/7CVJ02MLmyRJUuMMbGrWSt2SPh5KkjQrnIdNzRo2d9I45mTaqGM7D9us\nHbv1+rbuuXEeNrXOedgkSZJmgIFNm8jBj64ZZZ3xdZGu/tiSJI2Lo0S1iYwyJ9PB64xvdOfqj+2c\nUZKkcbGFTZIkqXEGNkmSpMYZ2CRJkhpnYNPMGzafm6TNyd9nbVUOOtDMG3wMVY8XeWkz8vdZW5Ut\nbJIkSY0zsEmStAYrPT5PGie7RCVJWoPB7tfxzfsoLWULmyRJUuMMbNriti8ZMbZt250dQSZtGZN6\nJNykHnMnrY1dotriBh8XBbffHnyElLRVTOqRcJN6zJ20NrawSZIkNc7AplVZy6ioYRNZ2r0gST2O\nNtUoUjU4wWD7ktRmrHsr6N0jcnD3w0r/L5Zus9btVvq8kevM6rFbr89z0+axW69vtG0Gr1lruR4O\n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\n/x8MvLCZKZ4unwAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1226cd8d0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "errors = lm2.predict() - df[\"predict\"]\n",
    "plt.hist(errors, bins = 100)\n",
    "plt.xlabel(\"Errors\")\n",
    "plt.ylabel(\"Frequency\")\n",
    "plt.title(\"Distribution of Errors\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Adding *Volume* label doesn't make things any better. We have the same problems as before. Another approach we could take is transforming the variables. Violations can arise if the relationship between the dependent and target variables is not a linear one. Trying to a fit a linear model to variables with non-linear relationships can especially lead to errors which don't have constant variance. \n",
    "\n",
    "Stocks are often observed to show almost a constant percent change over time. In such a case, the relationship is a multiplicative one, not a linear and additive one. Applying a log transformation to all the variables turns this relationship into a linear and additive one. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>     <td>np.log(predict)</td> <th>  R-squared:         </th> <td>   0.956</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.956</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>6.640e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Sun, 16 Oct 2016</td> <th>  Prob (F-statistic):</th>  <td>  0.00</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>19:46:24</td>     <th>  Log-Likelihood:    </th> <td>  2261.8</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td>  3031</td>      <th>  AIC:               </th> <td>  -4520.</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td>  3029</td>      <th>  BIC:               </th> <td>  -4508.</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>     1</td>      <th>                     </th>     <td> </td>    \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>    \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "        <td></td>           <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th> <th>[95.0% Conf. Int.]</th> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Intercept</th>     <td>   -0.0866</td> <td>    0.023</td> <td>   -3.849</td> <td> 0.000</td> <td>   -0.131    -0.042</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>np.log(Close)</th> <td>    1.0104</td> <td>    0.004</td> <td>  257.673</td> <td> 0.000</td> <td>    1.003     1.018</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>89.594</td> <th>  Durbin-Watson:     </th> <td>   0.058</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th> <td> 0.000</td> <th>  Jarque-Bera (JB):  </th> <td> 219.564</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>          <td>-0.082</td> <th>  Prob(JB):          </th> <td>2.10e-48</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>      <td> 4.308</td> <th>  Cond. No.          </th> <td>    63.9</td>\n",
       "</tr>\n",
       "</table>"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            OLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:        np.log(predict)   R-squared:                       0.956\n",
       "Model:                            OLS   Adj. R-squared:                  0.956\n",
       "Method:                 Least Squares   F-statistic:                 6.640e+04\n",
       "Date:                Sun, 16 Oct 2016   Prob (F-statistic):               0.00\n",
       "Time:                        19:46:24   Log-Likelihood:                 2261.8\n",
       "No. Observations:                3031   AIC:                            -4520.\n",
       "Df Residuals:                    3029   BIC:                            -4508.\n",
       "Df Model:                           1                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "=================================================================================\n",
       "                    coef    std err          t      P>|t|      [95.0% Conf. Int.]\n",
       "---------------------------------------------------------------------------------\n",
       "Intercept        -0.0866      0.023     -3.849      0.000        -0.131    -0.042\n",
       "np.log(Close)     1.0104      0.004    257.673      0.000         1.003     1.018\n",
       "==============================================================================\n",
       "Omnibus:                       89.594   Durbin-Watson:                   0.058\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):              219.564\n",
       "Skew:                          -0.082   Prob(JB):                     2.10e-48\n",
       "Kurtosis:                       4.308   Cond. No.                         63.9\n",
       "==============================================================================\n",
       "\n",
       "Warnings:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "\"\"\""
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lm3 = smf.ols(formula='np.log(predict) ~ np.log(Close)', data=df).fit()\n",
    "lm3.summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Again, we obtain satisfactory values. Let's check how the errors pan out. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.text.Text at 0x127992490>"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\nQfH4Wzl2IO18/SuuuK+c+1zl58X6rVu/WM7y53n7lFT6/HD599PP6/QunTx5f33603fJuYuSNgrn\nwf36O3zsHDz/5Ptm/7xycPsuXqza9wc/v+eeew58bnZMV1xxj668cv+r6uC+2S/fsWPHdPHixcr6\nyct37Ngx3X77pcL2bajcvg4eG8cu13u+vtl9SvWzv/6RI0cqt39jY0PHjh3THXfccbntFM9vxe2v\nWj/fv031K+nyOfCg/fKtzjsbh7b/4PmtvP5dl8tfVbdHjhzRiRMndPHixcI5qLz+VVkex0p1t39+\nPfidUQxaDp4jD64vSZa1z3L598+DGxtX6fTp06XvkYP1d/FicZ/o0OfV23+w/lbngHLAtV/+Vf3c\nIzOP0KuqO22sl1aRVH5DwFVa3RDwpaVl/q72bwj4KrXcEODTZVn1fvHztleItgtEq8rhq2tZfcvS\ntw5Wy4bP6eNTpq51EqK4Tozy+5Yx5qu8HcUyVJUlpF7a1uv7gPfQuo1VTyF10rZOjDYUclyEtMEu\n9R6jzn112f9tbS6kPL7to+rVpe133SfF8lWt45tG7HbZN9/QtNrqNnQ/+uXdfJOV7za4qnim6s0x\nX5KeJulmSR+W9ILsvedI+p7CMq/UKoj7I9Vcb+YSDc7a0i0KPaBjN/CQtGOVLyQfn/xj7rsuB3Sf\n+h/i5Vz1dRF12xVSL32Oia75NOXZt566tJm2dWK0oZDjIqQNdqn3GHXuq+3anTKf82fVj2Wfegjd\n1i76XMuWL1O1jm8asdtle77t18f5puUblIfUQ+g+8N3/NcsfimcWNwlt0/Y0TTTpXPUEelVC62yo\nyUj7TjzYtGzIJHp1is/F7KquTHX5xyh3Oa2QtuGT387OzmjXWuT5lydKLE78WLV8k1jPz+uST1Oe\nfSbCrd7HG9rc3NKFC7fUruf7XMY+bagp/aYyVC1bXKfLMRSjzrscg33TaUrTpx5C91/s48FnH9c9\n77bcFocU8n0TM622+u5yHPZp6z5xiLSh48eP6c47b5ermISW4EwEZ1XLxghyYgQhh8u0GuOfc3BW\nTHtodcFZXTkIzprzKCM4IziLWbY6XYKz/Iam/MdFGsFZ+ek81U/r8Uuredmq9dIJzva/x5J9QgCW\na5g74S5pe3u705pnzpyJXJZ1N/RM+EuYaX9Dm5unpi4EIuh63pnKhQu3NPb65sbdrnIgNs7dpent\n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\nM7NrzewdZvYnZvZ+M3tu9n7tJL1m9kIz+7CZ3WRmTym8f6WZ/Vy2zgfM7O9PsU2pi1zn15nZH5vZ\n+8zsP5rZ1VNsU+pC69zMrs6W/4yZvaKU1uOyOv+Qmb1siu1JXaz6NrP7mNlvZO3+/dl1wKgQs40X\n0nyrmf3xmNsxJ5HPK0l9fxKcTe8eST/knHuUpCdK+j4ze6RqJuk1sy+T9K2SvlTS10v6GTPLLyb8\nP7S6u/URzrkvk3TjuJsyG1Hq3MyOSHqZpDPOucdKer+k7x99a+YhqM4lXdTqru5/VpHWz0p6tnPu\n4ZIebmZPHbz08xOzvv+f7GatvynpSdR3rZh1riw4+PTgpZ63mHWe1PcnwdnEnHMXnHPvy/5/h6Sb\nJF2r+kl6v0nSG51z9zjnbpH0YUmPzz77x5J+opD2pwbfgBmKWOd5UHy/LEC+v6SPjbIRMxNa5865\nzzrnfk/SpWI6trqz+37OuXdnb71ONRNYr7NY9e2c+5xz7sbs//dIek+WDkpi1bkkmdlxST8o6cdH\nKPpsxaxzJfb9SXCWEDM7Lemxkt4labNmkt5rJH20sNptkq4pDMH9uJn9VzP7ZTP7wlEKPmN96jz7\nsvqnWvWY3apVz9qrRyn4jHnWeZ1rtKrr3K3Ze6jRs76L6XyBpG+U9DvxS7ksEer8xyT9pKTPDVTE\nxelT5yl+fxKcJcLMTkh6s6TnZb8AyndqtN25cVSrXwy/65z7Cq0a6L+MXtAF6VvnZnZU0vdKeoxz\n7hqtgrQfHqKsSxGhnSNArPrOhvDfIOllWe8xakQ4rzxG0l93zr1Vq955Jl9vscTvT4KzBGRf8m+W\n9Hrn3Fuyt/fMbDP7fEvSx7P3b5P00MLq10q6zTn3SUl3Oud+PXv/TVpdI4IKMepcq19prvBl9Sta\nXfeACoF1XqduX6AkUn3nXiXpZufcT8cv6XJEqvMnSvoKM/szSf+vVtdVvmOoMs9djDpP8fuT4CwN\nr5H0AefcywvvvVXSd2X//05Jbym8/21mdpWZ/TVJXyLpD7LP3mZmX5P9/+9I+sCgpZ63GHV+m6Qv\nM7MHZst9nVbXPKBaSJ0XXe45yIYobjezx2fX+X1HzTqIUN+SZGY/Lun+zrkfHKKQCxOjjf9r59y1\nzrkvlvQkrYLiJw9U3iWI0s6V2Pcn85xNzMz+lqR3ajUk5rLXD2v15f8rWvUSnJf0rc65v8rWeaGk\nZ0u6W6tu3Ouz9x8m6fWSTkr675K+2zl3q3BA5Dr/Hkn/m6S7snW+yzn3l6Nu0Ax0rPP/ptUj266S\n9DJrv9UAAAHESURBVFeSnuKc+6CZfYWkX5J0TNJ/dM49b9ytSV+s+pb0Ga2ut7xJqzbuJL3SOfea\nMbdnDmK28UKapyS9zTn36BE3ZTYin1eS+v4kOAMAAEgIw5oAAAAJITgDAABICMEZAABAQgjOAAAA\nEkJwBgAAkBCCMwAAgIQcnboAADAmM7taq+dDOkkPkXSvVjOIm1azhD9pwuIBAPOcAVhfZvZ/SrrD\nOffSqcsCADmGNQGss/Kjij6T/XvGzHbN7N+b2Z+a2U+Y2beb2e+b2R9lj/GSmT3IzN6cvf/7ZvbV\nU2wEgGUhOAOAfcWhhEdL+h5JXybpWZL+hnPuCZJeLekHsmVeLuml2fv/s6RfGLGsABaKa84AoNq7\nnXMflyQz+4ik67P33y/pbPb/vyPpS7OHsEvSCTO7r3Pus6OWFMCiEJwBQLVLhf9/vvD357V/7jRJ\nT3DO3T1mwQAsG8OaALDP2hc54HpJz7u8stlj4hYHwDoiOAOAfXW3r9e9/zxJX5ndJPD/SXrOMMUC\nsE6YSgMAACAh9JwBAAAkhOAMAAAgIQRnAAAACSE4AwAASAjBGQAAQEIIzgAAABJCcAYAAJAQgjMA\nAICE/P8M8ukY3LtZMAAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11f6aed50>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "preds = lm3.predict()\n",
    "errors = preds - np.log(df[\"predict\"])\n",
    "time_data = np.array([df.iloc[i].name.to_datetime() for i in range(len(df))]) #generate an array of dates \n",
    "plt.bar(time_data, errors)\n",
    "plt.ylabel(\"Errors\")\n",
    "plt.xlabel(\"Time\")\n",
    "plt.title(\"Errors vs Time plot\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "plt.hist(errors, bins = 100)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can see considerable improvement in terms of variance of errors is concerned, which is much more stabilished than before. The pike near 2008 can be attributed to the 2008 economy crisis, and the model can be excused for not being able to generalise to that. However, the problem of autocorrelation is still evident. The distribution of errors is somewhat normal, so now the bulk of efforts have to geared towards addressing the autocorrelation."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.96351565294476893"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "errors.autocorr()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As we can see, it's still staggeringly high. There are a few methods we can try to get rid of autocorrelation. One of them includes adding a time variable that can account for autocorrelation while training the model. I am going to have a time variable that starts from 1 and gets incremented every 5 rows. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>     <td>np.log(predict)</td> <th>  R-squared:         </th> <td>   0.957</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.957</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>3.408e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Sun, 16 Oct 2016</td> <th>  Prob (F-statistic):</th>  <td>  0.00</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>19:49:24</td>     <th>  Log-Likelihood:    </th> <td>  2300.2</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td>  3031</td>      <th>  AIC:               </th> <td>  -4594.</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td>  3028</td>      <th>  BIC:               </th> <td>  -4576.</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>     2</td>      <th>                     </th>     <td> </td>    \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>    \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "        <td></td>           <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th> <th>[95.0% Conf. Int.]</th> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Intercept</th>     <td>    0.2811</td> <td>    0.047</td> <td>    5.950</td> <td> 0.000</td> <td>    0.188     0.374</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>np.log(Close)</th> <td>    0.9323</td> <td>    0.010</td> <td>   96.537</td> <td> 0.000</td> <td>    0.913     0.951</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>time</th>          <td>    0.0003</td> <td> 2.93e-05</td> <td>    8.821</td> <td> 0.000</td> <td>    0.000     0.000</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>113.932</td> <th>  Durbin-Watson:     </th> <td>   0.055</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th> <td> 0.000</td>  <th>  Jarque-Bera (JB):  </th> <td> 329.607</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>          <td>-0.068</td>  <th>  Prob(JB):          </th> <td>2.67e-72</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>      <td> 4.610</td>  <th>  Cond. No.          </th> <td>8.19e+03</td>\n",
       "</tr>\n",
       "</table>"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            OLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:        np.log(predict)   R-squared:                       0.957\n",
       "Model:                            OLS   Adj. R-squared:                  0.957\n",
       "Method:                 Least Squares   F-statistic:                 3.408e+04\n",
       "Date:                Sun, 16 Oct 2016   Prob (F-statistic):               0.00\n",
       "Time:                        19:49:24   Log-Likelihood:                 2300.2\n",
       "No. Observations:                3031   AIC:                            -4594.\n",
       "Df Residuals:                    3028   BIC:                            -4576.\n",
       "Df Model:                           2                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "=================================================================================\n",
       "                    coef    std err          t      P>|t|      [95.0% Conf. Int.]\n",
       "---------------------------------------------------------------------------------\n",
       "Intercept         0.2811      0.047      5.950      0.000         0.188     0.374\n",
       "np.log(Close)     0.9323      0.010     96.537      0.000         0.913     0.951\n",
       "time              0.0003   2.93e-05      8.821      0.000         0.000     0.000\n",
       "==============================================================================\n",
       "Omnibus:                      113.932   Durbin-Watson:                   0.055\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):              329.607\n",
       "Skew:                          -0.068   Prob(JB):                     2.67e-72\n",
       "Kurtosis:                       4.610   Cond. No.                     8.19e+03\n",
       "==============================================================================\n",
       "\n",
       "Warnings:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "[2] The condition number is large, 8.19e+03. This might indicate that there are\n",
       "strong multicollinearity or other numerical problems.\n",
       "\"\"\""
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "time = [i/5 for i in range(1, (len(df) + 1))]\n",
    "lm4 = smf.ols(formula='np.log(predict) ~ np.log(Close) + time', data=df).fit()\n",
    "lm4.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.text.Text at 0x1307d4b10>"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAmcAAAGJCAYAAADPFJR+AAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAIABJREFUeJzt3X+8J1ld3/n3p7uH29ANA8OPe3EGemJcQMkKURfEsOnr\nL8DEgDErOoq/85Blo7Ca3QCu7r29ughZo4hEExQRSAgKagCNYYzS7UaDEhFlZUBEp2UGuwngDPTA\n9Pw6+0fVt2/d+taPc6pOVZ2q7+v5eHwf3ff7rTp16tSp+n6+55w6Zc45AQAAIA1Hps4AAAAADhCc\nAQAAJITgDAAAICEEZwAAAAkhOAMAAEgIwRkAAEBCCM4AoCcze5SZfdLMbOJ8nDKz+8yMazswY5zA\nAHozs5vN7NN5gPKp/N9XTJ2vWMzspwv7ddnM7sr//0kz+zXn3Iedcw9yaUwc6ZUHM9szs9cNnRkA\n4Y5NnQEAi+Ak/X3n3DvaFjSzo865e9veC01jSM6550l6Xr7tPUl/0zn3LWNtH8BmoeUMQCyVXXpm\n9q1m9p/N7MfM7GOS9mreMzP7gbwV7oKZ/byZPShPY9Vd9x1mdl7Sb5rZlpn9GzP7mJn9tZn9npk9\nvGL7/8zM3lR67yfM7OX5/7/NzD6Ut4J9yMxuCN7xUneimb3DzH7IzH4nb3F7i5ldk+f39jyvjy6s\n/zgzu9HMPm5mN5nZ1zVs6x1m9pI8jdvN7FfM7ME1yz4y3/bHzexPzewf5+8/XdL3S/r6PH9/GLrP\nAIZDcAZgDE+W9GeSHiHp/65579slfYuk05I+W9IDJb2ylM7flfRYSU+X9K35MtdKukbS/yzpMxXb\nfqOkrzKzE5KUB1BfJ+nfmtkDJP2EpKc75x4k6UskvafjPpa7E79e0jdJ+ixJnyPpdyW9WtJDJL1f\n0l6enwdIulHSv5H0MEnfIOlfmtnjGrb1zZK+TdKOpHsl/WTNcr8g6S/z5b5O0kvMbNc593ZJL5H0\nC865Bzrn/nbQngIYFMEZgFj+vZl9Im/F+oSZfWfhs1udcz/lnLvPOXe55r1vlPRjzrnzzrlPS3qx\npG8oDG53kvacc3fmy98t6aGSHuMyf+icu1TOlHPuLyW9W9I/zN/6ckl3OOfelf99r6T/3syOO+cu\nOuduilQer3HO3eyc+5SkX5f0IefcO5xz90l6k6RVQPTVkv7COfe6fD/+SNIvKwum6rzeOXeTc+4z\nkn5Q0rPLNyOY2aMkPUXSC51zd+fp/qyyABhAwgjOAMTyLOfcNc65h+T/vrrw2Ycrli+/91mSzhf+\nPq9sXOx24b1bCv9/naS3S3qjmd1iZi81s6M1eft3klbdlTdIeoMk5UHg1ysbT/ZXZvY2M3ts/S4G\nuVj4/2cq/j6Z//+UpC/OA9pPmNlfKwtUdxrSLpbdeUlXKWt1K3qkpE/k+1hc9lr/XQAwBYIzALE0\nTSNRdQdh+b2PKAtUVk4pax0rBjVX1nHO3euc+yHn3OOVdUf+A9W3Cr1J0q6ZXausBe0NhXR+wzn3\nNGXB0Ack/UzDfgzhw5LO5gHtKrh9kHPunzSs86jC/09JukvSx0rLfETSNavu3NyjJd2a/z+FO0sB\nVCA4A5CKfyfpe83sejM7qWwc2hvzbkCpFPyZ2a6Z/a282/OSskDuPlVwzn1M0jlJr5H05865D+Rp\nPMLMnpmP+7o7T6frXaBd5zj7VUmPMbPnmNkxM7vKzL6oZczZc/KbCB4g6YykNxWm8TBJcs7domyc\n24/kN098vqTvlPT6fLmLkq4vd4cCmB7BGYBY3laY++uTZvZLgev/nLLA4bclfUjSpyU9v/B5uaVn\nR9KbJd0u6U8kvUMHgUeVNygbb/ZvC+8dkfR9ylqTPqbshoPnBea7Kn/erVL5OLmnKbsR4CP566WS\n7tew2uslvTZf9n6SXlCz7Rsk/Y18uV+S9IOF6U7epCyQ+7iZ/Vff/AIYnk09Z6KZPUPSy5VdJF/t\nnHtZxTK7kn5c2biK/+ac+9JRMwkAiTCzdyi7IeDnps4LgGFMOglt3h3xSmW/Zj8i6V1m9hbn3PsL\ny1wt6V9Keppz7lYzKw96BQAAWIypuzWfJOmD+a3zdyubj+hZpWW+UdIvOedula6MHQGATcVAfmDh\npn5807U6fEv4LcoCtqLHSLoqb8o/KekVzrmmcSUAsFjOuS+bOg8AhjV1cObjmKQvkPRlkk5I+i9m\n9l+cc382bbYAAADimzo4u1XZvDsr1+lgDp6VWyR9zDl3p6Q7zey3JT1B2WNfDjEzmvsBAMBsOOfW\nprOZeszZuyR9Tv7Q4Pspu5X8raVl3iLpqWZ2NJ/T58mSah+v4pxb9Gtvb2/yPGzaizKnzJf+orwp\n8014pVjmdSZtOXPO3Wtm363sob+rqTRuMrPnZh+7Vznn3m9mb5f0x8omh3yVc+59E2YbAABgMFN3\na8o59x8lPbb03r8u/f2jkn50zHwBAABMYepuTQTa3d2dOgsbhzIfH2U+Lsp7fJT5+OZU5pM/ISAm\nM3NL2h8AALBcZiaX4A0BAAAAKCA4AwAASAjBGQAAQEIIzgAAABJCcAYAAJAQgjMAAICEEJwBAAAk\nhOAMAAAgIQRnAAAACSE4AwAASAjBGQAAQEIWGZzt7+9PnQUAAIBOFvng8/xBolNnBwAAoBYPPgcA\nAJgBgjMAAICEEJwBAAAkhOAMAAAgIQRnAAAACSE4AwAASAjBGQAAQEIIzgAAABKy2OCMpwQAAIA5\nWuwTAiTxlAAAAJAsnhAAAAAwAwRnAAAACSE4AwAASAjBGQAAQEIIzgAAABJCcAYAAJAQgjMAAICE\nEJwBAAAkhOAMAAAgIQsNzramzgAAAEAnCw3OLk+dAQAAgE4WGpwBAADME8EZAABAQgjOAAAAEkJw\nBgAAkBCCMwAAgIQQnAEAACSE4AwAACAhBGcAAAAJITgDAABICMEZAABAQgjOAAAAEkJwBgAAkBCC\nMwAAgIQQnAEAACSE4AwAACAhBGcAAAAJITgDAABICMEZAABAQgjOAAAAEkJwBgAAkJBFB2f7+/tT\nZwEAACCIOeemzkM0ZuacczKzK+8taf8AAMBymJmcc1Z+f/KWMzN7hpm938z+1Mxe2LDc/2Bmd5vZ\n146ZPwAAgDFNGpyZ2RFJr5T0dEmPl3SDmT2uZrmXSnr7uDkEAAAY19QtZ0+S9EHn3Hnn3N2S3ijp\nWRXLfY+kN0v66JiZAwAAGNvUwdm1kj5c+PuW/L0rzOyzJH2Nc+6nJa31ywIAACzJ1MGZj5dLKo5F\nI0ADAACLdWzi7d8q6dGFv6/L3yv6IklvtOwWzIdJ+iozu9s599aqBJk+AwAApOjs2bM6e/Zs63KT\nTqVhZkclfUDSl0v6K0m/L+kG59xNNcu/RtLbnHO/XPM5U2kAAIBZqJtKY9KWM+fcvWb23ZJuVNbF\n+mrn3E1m9tzsY/eq8iqjZxIAAGBETEILAAAwgWQnoQUAAMABgrMIuAkBAADEsrhuze3tU7p48fyV\n98bYv7xZcvDtAACA5ajr1lxccFZ+j+AMAACkiDFnAAAAM0BwBgAAkBCCMwAAgIQQnAEAACSE4AwA\nACAhBGcAAAAJITgDAABICMEZAABAQgjOAAAAEkJwBgAAkBCCMwAAgIQQnAEAACSE4AwAACAhBGcA\nAAAJITgDAABICMEZAABAQgjOAAAAEkJwBgAAkBCCMwAAgIQQnAEAACRk8cHZ/v7+1FkAAADwZs65\nqfMQjZlV7szQ+2hmg28DAAAsSx4/WPn9hbecbU2dAQAAgCALD84uT50BAACAIAsPzsbD2DYAABAD\nY87ibHeU7QAAgOXY0DFnAAAA80JwBgAAkBCCMwAAgIQQnAEAACSE4KynnZ3rB01/d3d30PQBAEBa\nuFuz/zYH3Q5PHwAAYJm4WxMAAGAGCM4AAAASQnAGAACQEIIzAACAhBCcAQAAJITgDAAAICEEZwDW\n7O/vT50FANhYBGfAwOYY6Jw5c2bqLCRnjscRwDwRnCWML4P529/fJ9BZCI4jgLHwhID+2xxsO6u0\nl3SMNs1cjyFPplhHmQCIjScEAAAAzADBGQAAQEIIzgAAABJCcAYMamvqDCACbs4BMCZuCOi/zcG2\nk6W9pe3tHV24cHPUtDEObghYhrkeRwBp44aAkcT/hX1ZFy+ej5wmAABIFcFZZMyFhCp0iwEAfG1M\ncMaXI6ZE0L4EW9rZuX7qTADYABsTnI335cgFHBl+ECwNQwwAjGNjgrPxcAFHJsXWMgJGAHNQvFZt\n4nVrI+7WPH36tM6dOxf1Tqv9/X3t7++v3a0Z866uIe8ExfCKx09K4xj63oXJ3ZqHcS4C4ypeg5Z8\nPdrouzXPnTsXPc0zZ85sZDQPAMDYNu37dvKWMzN7hqSXKwsUX+2ce1np82+U9ML8z09Jep5z7r01\naTXuTMx9LbeKrNKn5QwrtJwtB+ciMK5yy5m0zHMvyZYzMzsi6ZWSni7p8ZJuMLPHlRb7c0l/1zn3\nBEk/LOlnxs0lEM+m/foDAISbulvzSZI+6Jw775y7W9IbJT2ruIBz7p3OudvzP98p6dqR8+iNL160\nGfsmAeokAMzP1MHZtZI+XPj7FjUHX/9Y0q8PmqMeUrw7D+2WHMBQJ1G25PoOLMWkY87M7B9Jerpz\n7rvyv58j6UnOuedXLPulyrpAn+qc++ua9EYZc7azc33rdBmMOZuPocZXVY05G3ssV3l7jDnrZknn\nIscWc7DpY86OTZGZglslPbrw93X5e4eY2edLepWkZ9QFZmM6CMy2JF2eMivoiVaEdZTJPKym8wGW\nKZvQ/cKFm6fOSFRnz57V2bNnW5ebuuXsqKQPSPpySX8l6fcl3eCcu6mwzKMl/aakb3bOvbMlvVFa\nzqru1BxiW0v6tZ6qIX+RpdFydlzb2ztXLnA+21/yr9SuUjwXu9YlWs4wB8Xr0JKvSUm2nDnn7jWz\n75Z0ow6m0rjJzJ6bfexeJekHJV0j6acsO0J3O+eeNF2ugTnhiRUAMDeTz3MWEy1nCLX8lrPD+0fL\nWTcpnou0nGHJNr3lbOq7NRdma+oMoCPG7gAAUkFwFqj5SzzezQG7u7vR0lohAKm3SVNO+NWDbDAu\nAGB8G9CteXBHZeyuxiZ9tzXEo3/ozlg3ZHdVqt2axb+b1mlbbpOkVib7+/s6c+YM3ZpYrD7dmnO6\nk7muW3MDgrMDcQKc4/JpIdu04GxOJ0NR8XgSnB1ep225TZJamfQZg0NwhjnoE5zNqY4z5iwa5jWr\nMt9uQY4n5muOP4gAtKPlLHwbXsttWsvZnH6pFNGtWb9O23KbJLUy6ZOfuZ6r2CxdW85WT/CZSx2n\n5QwAACzaUuZ1JDgDgABpdCUybc+cpFFn5mhLJ08+eOpMTIJuzfBteC3XZ1u7u7s6d+5ctPRW6NZc\nR7dm/Tpty22SIYYZ9LGUbs2dnet16dJtunTptqmzMigz097eHkFagKrvWp96O7cJa+nWnImdnevX\nAjNgKfhymlZq5X/x4nndccftU2djFPO9aQpToOUsfBtey3XdVl36tJwNY9iWs8PTrtBytox6Ik3/\nq7zrMUqtVSG1/AxlU/YzJlrOAAyEaToAYFP1aakmOAMALFZqXbnYHH26sgnONgQXqHVjl8kcj8EQ\neZ5jOSC+seoBY70wRxs15izG3TJzHXM2dD/8HMcSDT2OaMjxg6F56DrmrG3ZvvmZg9VzLIumzn9W\njtlzg+c65mysu4JTuDat9pU7Nv0tYcyZT93j2Zq52DP3x94Owdl4CM6a11nZ9OCs65fEkJZwQ8Cm\nBGfl4D6Fsp+DTQ/O6NYcxJZ2dq6fOhMABkLrB3zRrYouvIIzMzthZkfy/z/GzJ5pZlcNm7U5u7yY\nR0hgOVIMKFLMkw++cONa1YP9/f3J6sRc6yKWyatb08z+QNL/KOkhkn5H0rsk3eWc+6ZhsxcmpFuz\n60XAt1uzuK0Y6afcrblqtnfOzWrG703r1vTtRhqzW3PqLicfKRzHsi5dgqsHQoesM6S6J2is/h9z\nO77dYUOUS2pz5M3Fpndr+gZn73bOfYGZfY+k+zvn/rmZvcc598TOuR5ASHDW9UQkOGtOO6UTow3B\nWfM6Psv2yc/q79TrSgrHsaxLcJbaY7mWHpytGgAIzrpZRnB2XNvbO7pw4eaGZfqNOTMze4qkb5L0\na/l7R0MzCqSCMYHAdDbh/KPre1ppdFN3H+LkG5y9QNKLJf2Kc+5PzOyzJb2j0xaBBDAmEHO1hMAm\nO/+2ps7GYFbHaAnHKtTOzvVJ7PeZM2eSyUsXrcGZmR2V9Ezn3DOdcy+TJOfcnzvnnj947gaWRmSN\n6Sz3y2EInC9pWM4Pi8OPN1tS/Vodo+UcK38XL55PZr9Tykso3zFn73TOffEI+ekldMxZ8e+AbXgv\ny5izdI0xd1UKY5VijjmLMSaHMWf9dR3DlNKYs7braMzJWqcYc9a0f1OX/dBifQf0HXMWut4QfOeV\n7DPm7A/N7K1m9s1m9rWrV6fcApgJWhaXIqVWqd3d3dZlGK+FKinV46H5tpy9puJt55z7jvhZ6o6W\ns/Z0aTnL0HJGy5mvFI5j0eH8bLXeDba+Tjp3mjaJ2YrVllZxOqBY26yTen3va8iWM590N6rlzDn3\n7RWvpAKzEJsUfU+FMt5cHPsxMeF1DLTUIba+10HfJwRcZ2a/YmYfzV+/ZGbX9dryhKpOxM34Qhn2\nsVLFMkz5YrcZx3oIfvUn5WO/idKr7+l2l8ctq3T3E8Prex307db8DUlvkPT6/K3nSPom59xX9tp6\nZL7dmlXdOyGDRn2l2K0ZI636tLdUvAMr1eb7sbqpUugOi92t2bbuarm6ZejW7C+02yalbh5pmG7N\npie++M7S3mW7PumVpV7f+6Jbcz0fQ94Q8HDn3Gucc/fkr5+X9PDAvGLxLrcvAuROnnzY1Fk4JL0W\nJvjY3d2ltRaSivPKpdBq2S8PvsHZx83sOWZ2NH89R9LHe205ESldkOc6WR6WY8zz4Y470rqE8AU/\nT+fOnVt7b86Tj6K7g/GXKTQU9MuDb7fmKUk/Kekpkpyk35X0fOfcX/baemRdujWL703drTlkU/g4\n3ZqHpdp8v4ndmnt7e4eCj7Zux6KhujVTu7O3Lt8pHMeiobo1m7oGY2q/hmbDI0LnbysuX65ndGuO\nZ8puzZTO1cG7NS17QsDXuuwJAQ93zj3COfc1qQVmS5dSCx/mJ7VWIepzes6cOZPIcbmsoW9eAlLX\nGpw55+6VdMMIeUGD1L5csVlif2lTn9OUznGJM0XIpgZ4aQTZWOlyPHy7NX9c0lWSfkHSHav3nXPv\nDt7igJbcrdklvbq0l9h9F2ITuzV981DXBeZTf1bdYnXn0s7O9ZVfuKnUk9BuzZiPGAoxVLfmWN3M\nsa+hTd2avuksrVtzyrug6dbM+NbBvndrPlHS4yX9X5L+Rf760ZCMAkhHSFDhu2xbq0tdS8hcf+U3\n7e9c92nu6h4NxfHA7DjnGl/KArhnty2XwkvZzQqNL5ctWPmeD59tFNP1sbe355V2H7HSKdvb26vN\n72q/UjNE+U65nS55qMvH+nJb3vlvOpea6snYZVLHv0z8y2IIoeUXeuyHFvsaWnUd71NGMfju01DX\nyCnPqVjX/9A60XSNmULgtWI9nql6c20h6b/6LDf1y/dkrwoiQi8EsS4sqzR90g5VPDmGqqix89zF\n3t5e0IVgrLymcKFoOjZXXfVAt719ynt5z4tM5TK+afa5oMf4Mqh7v2tZDCEkH9vbp7yXH6t+xr6G\nlq/tddvwzVOMgMl3n4Yo75DvsyHEutaF1IkUf/wFXis6B2cvlfS/SXqUpGtWL591x3z5nuwxLgSx\nLiyFgxOUns8FpHih8b2QnzhxtXe+Q/M8lNW2Tp8+HbT80HlN4UIRWk/71OvyF2RIuuU0uu5rV01f\naH3KYgih+fBdfqz6GfMaWvxSXqVdtw2fNLLX1tqPlpj7uNrm6dOnB73uTCXWta5L3U3hmluXp6bl\nXEU843tDwF9UvO2cc5/duvKIut0QcPDIIc+y8M6PT3qrNNfz1ZxeyNw95bTr1usykHPImxi65KHP\nMYyd1xQGp9Yfn+p671O/nXOVc2KZHdf29o4uXjx/aLD8/v5+63i0VR76DGTuu24xH1WfVak/l7Ky\nuHDh5k75aRJyQ0BIHZzjDQHlc7/pWhqjjHy11ZkxbtAa8zpTtf2+eehSd+v0LYsucwD2vSHAKzib\ni653axY/89iGd36mD86OazWZI8FZ9fJFmxWcHegSnFXVv7qLUXOahyccTS04q7vDdCXmueSrf+Cx\nVRk4+uQ5xkS1BGfr1+OYEwBnaW/pxInjunTptihphm8/M0ZwFvLjr09eQtMY9G5NM/tnhf9/Xemz\nl4RkFFNI4REWQJO062iMubbS030OsXTmQat3EOSk8HxFP/EnAL6sO+64ffLHWI1xl+xQdXLyO3yr\n+jpXL0nvrvp/1d8pvOQ5hqHpszY+2whJb5WmT9rlAf6+eS2PqWhbPkSsMugj1jEcMl9jl0lbHqry\n0zaotnwOtW2rSx76lE/fdX32yfdYDnmsu+TDZx2fPMfYp5jX0Kp62fVYxTxPfc6fqutzWejNCVla\n/ndYDyHWtkPrbZ96VLf9qv93zX/dsczTXo9nqt688qH0h1X/r/o7hZfPQaq7e8m38GNeWEoHJyjN\n0AtXyEUqRNWFYOyLQqxjOGS+UrlQttUp3+V9LpLO1d8tWHfh6lM+fdftcuFvuuAOday7nNNt6zQF\nCOX0hsh/13Olql52ve7FPE99zh+fbYZfj9O75nQRMi1GjHpUt/3iNkL55iN/Pzg4W1zLWd8DGDu9\n1ZeXb9rO+d8q3fUi1aZuio6pLgqxjuGQ+UrlQtmUn5B67XORDEmzKd2Qfe2zrs8+Hby2atdpSi+G\nLud01as4BU1xn9q27Vz3aUt8W2d9yy+kvrUF0jHPU5967rPN0HxMdc1ZlW3V8e0ipE7EqEfraR4+\nF7ql4ZeP/P3g4OxeSZ+U9ClJ9+T/X/19d9O6U7xCTvquB3Co9HzTLq8Tntf628RD0m3exngXhXIe\nQpcvvmJPCDllmbTloSo/IfXa5yIZkuaq/PuUT991ffbJ93gOeaxD6lR7/rfWWjfrrJYr/qCMkfc+\n149ykNznWMU8T33On7rPilMaheZjqmtO0351Tc93X2LUo7o0nes+b1xI/XOhwdncXqEnfpcDGJKe\n71xkvheW8nJ98tqWl7Z0fctjaL5fLEVt+Y0VpE1VJj55qMpPyHnic5EMSTP0vKnb167qjk3X68aQ\nxzqkTsW8Dsaox7HyUpWeT/oheerD5/zJXlu1n3UJCmKfUyHbrdt+t/Tqh8tUbbtvPapLs/z/Lmn4\n1D9HcNb/AA51cQkdjB164Qq5SPmkO8Yjp3zEPoarz4fI21hl4pOHqvy0jR9sKqO67oz6dOKPVexT\ntnXb7XqOD3msQ8or9HoVklasvHetB+UfZgd10P+LvSlPfficP3UD98ufxdzuUA7yHudmhJD96FuP\nmrZf/n/ffagKkvO01+KZjZvn7LCDiTglyacsQubo8UmzS3q+cyiFTp65mh+nbfLMusltfbcTk+9c\nMk3rlNfvM1+Wz3bGPOdC5jnzrYtVZVS17okTD9Udd3zcM6eHFSex9TXEPGeh88S1pRdDjDm8mvim\n1WXfYl4/Y+3b1POctX0Wko8uEybHUD2/3OE5DEPTqxPrHPXZ/t7e3pWpOrqm0ZaXTvOcLV/acyxN\nw38OpMnngVmzpZMnHzx1JpALD8wO5qWaw3xaU4h7zs1nHrApxZwgdpXeZkjv+zWs7LcmvQ5teMvZ\nYbSc+c3sPMRTEroKaUVoWqe4Li1n7cv7tJz11eWX6tJbzkLr1JAtZ9vbpyQp6BFVc2w5G+LJKXWW\n1XLWfbtDtZz5XiNi7ActZ0CAkycfNnUWJhSnpST79bnVMvP48K0yR4+emHT286XybV24ePH8Qp+g\nMD+b0xo3tulalzc0OJu+OX8ZJ9P05Riq6xioZYjTzZA19bd1fw/bpbGzc73uu+/TunjxfPRup01H\nl3K1MepY121Mecz6lstq/TTP4Qm7ZqvuEpjrSx53bTS9Qqa+6JumSneC+L6K6/TJa9vyscpgaKHb\n9C3flT63oE9VJj55qMpPl3Omz7p96k7ssq1bv0s+fWfb75NP3/2OWfYxynyMOtD0qrtbzrduD7Wf\n9a/6eSnL22u747/K9vYpr/R99rVuv33WL/5bl06Mc9T3GPat5035qlrOVcUzVW/O9RXjZOha4KFp\nNlXmtrRi5LVt+VhlEENTgBS6Td/yLS7f1ZBl0jcPdReurnU7xrkX4zh20RRMdcnnkMc6dL9jln2M\nMh+jDvQ5Xgevg6AodF99H1kWqxx8y6JpvT6KaTSVY9P6q399pmiq277POr772ree19eB9fLI0yY4\nG+Mk8D0puqR34sRDr/y/rVWn64naVg4xy9NHUzqh2/TJb5eTOWRbYwq9cHWt2zHOvcOv5ot6cbm+\nZdu0fpc6XvXZ6dOnO+XNNz+hy3c5b8vHp0uZx8hH7H3zuR6E7Gv8c2GOwZn/eVlet21/6rbvs05b\nXpqCwzpV53bIscj/XotnNnTMWTex+8S7pFccM7UJY0PSHIcwD/MuO98pXdK7Xb/KuXPnRt/msMd/\n2nKPdWNP7BtK5n3OxVRdP1IvnzNnzgTncbBzuypim+tLA/9CCU8v+/VQP87Bb0b2IfLbtnyscuir\nLp0uv3B88r5aprh837zHLpO+26/LT5/6F+PcCymrWGVbHqfTpQzX11lvVYp13Luez+uv8Cc0xCjz\noY+/z6t4PfbZfsi++uXB97rv3zrZtSx90/cZWtI05q14vS6nWy7ntv3ps+9t+9q1LobmqWL99Xim\n6s0xX5KeIen9kv5U0gtrlnmFpA9Keo+kJzak1euk7XPgQtONkdfYFW2IcuirqfxOnz4d/Riuliku\n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\nTkSuQmCC\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11e953150>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "preds = lm4.predict()\n",
    "errors = preds - np.log(df[\"predict\"])\n",
    "time_data = np.array([df.iloc[i].name.to_datetime() for i in range(len(df))]) #generate an array of dates \n",
    "plt.bar(time_data, errors)\n",
    "plt.ylabel(\"Errors\")\n",
    "plt.xlabel(\"Time\")\n",
    "plt.title(\"Errors vs Time plot\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.97226583613383333"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "errors.autocorr()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Again, we see that the added time variable hardly makes a difference to our results. Another way of addressing autocorrelation is to add a lagged variable of independent variable as a feature while modelling the data. let's go ahead and do that.  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "df['lagged'] = df['predict'].shift(1)\n",
    "df.dropna(inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>     <td>np.log(predict)</td> <th>  R-squared:         </th>  <td>   0.999</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th>  <td>   0.999</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th>  <td>1.203e+06</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Sun, 16 Oct 2016</td> <th>  Prob (F-statistic):</th>   <td>  0.00</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>19:50:33</td>     <th>  Log-Likelihood:    </th>  <td>  7639.5</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td>  3030</td>      <th>  AIC:               </th> <td>-1.527e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td>  3027</td>      <th>  BIC:               </th> <td>-1.525e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>     2</td>      <th>                     </th>      <td> </td>    \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>      <td> </td>    \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "         <td></td>           <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th> <th>[95.0% Conf. Int.]</th> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Intercept</th>      <td>    0.0006</td> <td>    0.004</td> <td>    0.151</td> <td> 0.880</td> <td>   -0.007     0.008</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>np.log(Close)</th>  <td>    0.0316</td> <td>    0.003</td> <td>   10.102</td> <td> 0.000</td> <td>    0.025     0.038</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>np.log(lagged)</th> <td>    0.9683</td> <td>    0.003</td> <td>  319.732</td> <td> 0.000</td> <td>    0.962     0.974</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>712.102</td> <th>  Durbin-Watson:     </th> <td>   1.985</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th> <td> 0.000</td>  <th>  Jarque-Bera (JB):  </th> <td>10850.512</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>          <td> 0.691</td>  <th>  Prob(JB):          </th> <td>    0.00</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>      <td>12.167</td>  <th>  Cond. No.          </th> <td>    104.</td> \n",
       "</tr>\n",
       "</table>"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            OLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:        np.log(predict)   R-squared:                       0.999\n",
       "Model:                            OLS   Adj. R-squared:                  0.999\n",
       "Method:                 Least Squares   F-statistic:                 1.203e+06\n",
       "Date:                Sun, 16 Oct 2016   Prob (F-statistic):               0.00\n",
       "Time:                        19:50:33   Log-Likelihood:                 7639.5\n",
       "No. Observations:                3030   AIC:                        -1.527e+04\n",
       "Df Residuals:                    3027   BIC:                        -1.525e+04\n",
       "Df Model:                           2                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "==================================================================================\n",
       "                     coef    std err          t      P>|t|      [95.0% Conf. Int.]\n",
       "----------------------------------------------------------------------------------\n",
       "Intercept          0.0006      0.004      0.151      0.880        -0.007     0.008\n",
       "np.log(Close)      0.0316      0.003     10.102      0.000         0.025     0.038\n",
       "np.log(lagged)     0.9683      0.003    319.732      0.000         0.962     0.974\n",
       "==============================================================================\n",
       "Omnibus:                      712.102   Durbin-Watson:                   1.985\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):            10850.512\n",
       "Skew:                           0.691   Prob(JB):                         0.00\n",
       "Kurtosis:                      12.167   Cond. No.                         104.\n",
       "==============================================================================\n",
       "\n",
       "Warnings:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "\"\"\""
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lm5 = smf.ols(formula='np.log(predict) ~ np.log(Close) + np.log(lagged)', data=df).fit()\n",
    "lm5.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.text.Text at 0x134892410>"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n+8NzcYZmUxy31Q3GVBw3LpUa1NwBrnsqmFPP82Bq7TTmksnUdNEXm1ovMn24FL5eJvfaG1Xd+AOA\nLqq6n2bY6rsVt3muGc/LN00TDfPO7+zsnAtffa/NN3fk8srVoy9S/baN06Xc2nSR9vXsq639RNqk\n1NbpsbOz4/aBxfetcN8o6aI2bRuieVpypWlTXaRhub7YRbYu+UTHu/RcG9lq01ll98k6xqopEB0/\n2rZrX4xddq78mr5rjeddyo7ksww3fRrOuM2Epsefev9TufP35JiKfFNmTB2V7ybvWIscc2Ryd+KE\nTJz1jnV7//aqWfas+67n0W3SgZYzbk2PvHmuGc/Ld5XG8uqPHTt+Lt2xY8f12LHj+8qx8krltdKU\n6ukdpTIjlPKJpo3kE5WpptwSqT2U2j6NZ+t+a489lGSLtEmprXM2kPvt1bmkw2ZeUXtPaXN3HI2X\ns6tUF15Y37J1ySc63qXn2shWmy43dvVB3/lNlej1p2279kWb8aLPstP6t72G5K6/ubLbhjfKtH0a\nL2CTjraOm9XIUacnzbtUZlqOlcbLc2zHrbmMm8snxxwct7T8Utun8WrbIHcuOmDvP7ay5ed+p3Ku\nnLDgAFQcSCN59Bk318+bvz2dt7ko1sS3nNVSXyvJ5Y0fbS/wtelyY1cfjOmkrJOa68+YOomOa21J\n+4h1c+317zZ2G9VnW9/AKNP2abyATTpSJXkzJ9ZFK1Fi2OlJ8/bORy9kaXxrNnD13RrwS06Dl6b5\n6c16lJyJqKGX4qdx0tmbNrS96ETaPo1XaoOIbCVdR8rJlZ/7bdlqxQBUHEgjeUTjRmbocv28+dvT\neZuLYhcnp3mu7UXBGz/aXuBr01k67JO+85sqNdefMXUSHdf6yr80PrUZe5pxo/ps6xsYZdo+jRew\nSUc6WHkXYOuilSgx7PSkeXvnoxcyq/xSfawy2zgOpYtFNDxHjQ7S+nSh7UUn0jHTeG31bznp0QG7\n5kjTenlZ5UT0VhpII3lE49bYXE4ebzyoKccqs23cmvbPhdW0Y+4GqVYHlg77pO/8pkqk73UZIyM3\nPjs7O9l4zYeevImGrjTzapa3CsuNN23stmZsadtHkzJtn8YL2KTDuhhZCizFs/a3rY7cLFfufPRC\n5l1Ic/WxymzjOJQuFtHwHDU6SOvThbTj18hY6phpvK7633tuS48cOeqW3eZI03p5WeWsKM3cRu3d\n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\nNM/S1pKoTFZ4rq96v0t5l+JY+eWcwmb/SJ84Tp9azvXvnI5z7WXVIzpTXap7m/CGTLZP4wVs0hEZ\nmNJGSpfMageanNFEOlPpfJpfySBq5Dxy5OJzHSddCi119ua5Zgf0Zo6a+Xh1yOmzbcdJy410Sksm\nb8AtyRyxlWj6SD262m0kbqqDtB1y8SO6LtG0s7TMnGzNtvTqXdKFhXfzkZM/YkOWflZldR23cmly\nMlvhuX2ibeRK87DK89raln3L3Oph5enJ4dm+tbzvta0VVpY93i65vur9LuXtxSnZoZcuYo9p3FwZ\nlo5y7WXVo41tWrpMSR848liG2z6NF7BJR1PJNQ0SGcxq03t5pQ1eOp/r9JZBdK2nN4ClaUv6Tcto\n5uPVIZqHVd8mbS4kadymMxqpQ60NefFKMvZhp+lhbV4v6cnSmSWbNVPYbKfV79yeQ6stPZ3lZIvo\nuqRbTx6rrJL8pfp4eVvl1LZ5SS85nefqn55rI5dq/qEjS0+r/ur1/Zx9WHJ65aXpm2G176yrtfVS\neHqkKx+WzFbe6YyZpxOvftb30t5cK376YJQncyTc+l7SX02/aNbRk8tjGW77NF7AJh21g0TNYFab\n3svLatTc+WYnXH3mLnJ91zPNt20ZiZE26rC1Z29SJI/99d0/xW7FyzmbER2mTkhE5to2yKVvlt3F\nTrsclg5K9pHKbV1QSu2cax8rr9wS/Orw9rDZ8bf25dvM3yqrJH+pPl7eVjm17ZhLU9J5rv675/Zv\nA4jKZenI0x+w/8ZDVfXEiRPulg1PXsvOmw5Erv97OrLK9vpQSm4W0Mq/1M45mdM8rbxXMnlxcnmX\nbC46g5yrTy7c+h7R3+LY2pfO0+WKvW2Xf3H1Mp3t03gBm3TUDhI5o+ia3ssrbfDS+UiZqRH0Wc80\nXz/t/oHPyye3h695eDNeqs27W/9deDV6UY09sZnm31a3Ofvw0uSW+NZ5pDooDbrN+Fa8NE2JnM7S\n72Vd7X/dSan+q5un1YZvr6yS/KX6eHlb5bRtQy+sSfN9gqvwlQ5SGWM6z8uV1tWbydj97rehp6vc\n7IiddmvPuVKb5JxGK59cPb12iawqpWXul2G/U+LZRxoWqR+w+z5KT8+1tlmj49Xv0g1njW1a6dO8\no+kb6WyfxgvYpKPtYLEw3nZ3iGlnLRmf17C5BremjD1jiKapzX9/Wj9NTb1XR0T3dj3tMny95HVS\n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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x12f73a150>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "preds = lm5.predict()\n",
    "errors = preds - np.log(df[\"predict\"])\n",
    "time_data = np.array([df.iloc[i].name.to_datetime() for i in range(len(df))]) #generate an array of dates \n",
    "plt.bar(time_data, errors)\n",
    "plt.ylabel(\"Errors\")\n",
    "plt.xlabel(\"Time\")\n",
    "plt.title(\"Errors vs Time plot\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.0055920888165946966"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "errors.autocorr()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.text.Text at 0x13d2a43d0>"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x13c71d290>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "errors = lm5.predict() - np.log(df[\"predict\"])\n",
    "plt.hist(errors, bins = 100)\n",
    "plt.xlabel(\"Errors\")\n",
    "plt.ylabel(\"Frequency\")\n",
    "plt.title(\"Distribution of Errors\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Alas! Adding the lagged variable not only improves the variance of the errors, but it also takes care of the autocorrelation which is negiligibly low now. Also, the error distribution is also close to normal now. However, there's one thing of which I want to take note here. In spirit of keeping models as simple as possible, how about we try to drop the *Closed* variable? Though the p-value of the variable *Close* is satisfactory, let us just try, for the sake of experiment, fitting a model with just the lagged logged variables. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>     <td>np.log(predict)</td> <th>  R-squared:         </th>  <td>   0.999</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th>  <td>   0.999</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th>  <td>2.327e+06</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Sun, 16 Oct 2016</td> <th>  Prob (F-statistic):</th>   <td>  0.00</td>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>19:53:27</td>     <th>  Log-Likelihood:    </th>  <td>  7589.2</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td>  3030</td>      <th>  AIC:               </th> <td>-1.517e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td>  3028</td>      <th>  BIC:               </th> <td>-1.516e+04</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>     1</td>      <th>                     </th>      <td> </td>    \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>      <td> </td>    \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "         <td></td>           <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th> <th>[95.0% Conf. Int.]</th> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Intercept</th>      <td>    0.0114</td> <td>    0.004</td> <td>    3.037</td> <td> 0.002</td> <td>    0.004     0.019</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>np.log(lagged)</th> <td>    0.9982</td> <td>    0.001</td> <td> 1525.547</td> <td> 0.000</td> <td>    0.997     0.999</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>659.060</td> <th>  Durbin-Watson:     </th> <td>   1.977</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th> <td> 0.000</td>  <th>  Jarque-Bera (JB):  </th> <td>11352.001</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>          <td> 0.560</td>  <th>  Prob(JB):          </th> <td>    0.00</td> \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>      <td>12.416</td>  <th>  Cond. No.          </th> <td>    61.3</td> \n",
       "</tr>\n",
       "</table>"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            OLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:        np.log(predict)   R-squared:                       0.999\n",
       "Model:                            OLS   Adj. R-squared:                  0.999\n",
       "Method:                 Least Squares   F-statistic:                 2.327e+06\n",
       "Date:                Sun, 16 Oct 2016   Prob (F-statistic):               0.00\n",
       "Time:                        19:53:27   Log-Likelihood:                 7589.2\n",
       "No. Observations:                3030   AIC:                        -1.517e+04\n",
       "Df Residuals:                    3028   BIC:                        -1.516e+04\n",
       "Df Model:                           1                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "==================================================================================\n",
       "                     coef    std err          t      P>|t|      [95.0% Conf. Int.]\n",
       "----------------------------------------------------------------------------------\n",
       "Intercept          0.0114      0.004      3.037      0.002         0.004     0.019\n",
       "np.log(lagged)     0.9982      0.001   1525.547      0.000         0.997     0.999\n",
       "==============================================================================\n",
       "Omnibus:                      659.060   Durbin-Watson:                   1.977\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):            11352.001\n",
       "Skew:                           0.560   Prob(JB):                         0.00\n",
       "Kurtosis:                      12.416   Cond. No.                         61.3\n",
       "==============================================================================\n",
       "\n",
       "Warnings:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "\"\"\""
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lm6 = smf.ols(formula='np.log(predict) ~ np.log(lagged)', data=df).fit()\n",
    "lm6.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.text.Text at 0x141ee2890>"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n+8NzcYZmUxy31Q3GVBw3LpUa1NwBrnsqmFPP82Bq7TTmksnUdNEXm1ovMn24FL5eJvfaG1Xd+AOA\nLqq6n2bY6rsVt3muGc/LN00TDfPO7+zsnAtffa/NN3fk8srVoy9S/baN06Xc2nSR9vXsq639RNqk\n1NbpsbOz4/aBxfetcN8o6aI2bRuieVpypWlTXaRhub7YRbYu+UTHu/RcG9lq01ll98k6xqopEB0/\n2rZrX4xddq78mr5rjeddyo7ksww3fRrOuM2Epsefev9TufP35JiKfFNmTB2V7ybvWIscc2Ryd+KE\nTJz1jnV7//aqWfas+67n0W3SgZYzbk2PvHmuGc/Ld5XG8uqPHTt+Lt2xY8f12LHj+8qx8krltdKU\n6ukdpTIjlPKJpo3kE5WpptwSqT2U2j6NZ+t+a489lGSLtEmprXM2kPvt1bmkw2ZeUXtPaXN3HI2X\ns6tUF15Y37J1ySc63qXn2shWmy43dvVB3/lNlej1p2279kWb8aLPstP6t72G5K6/ubLbhjfKtH0a\nL2CTjraOm9XIUacnzbtUZlqOlcbLc2zHrbmMm8snxxwct7T8Utun8WrbIHcuOmDvP7ay5ed+p3Ku\nnLDgAFQcSCN59Bk318+bvz2dt7ko1sS3nNVSXyvJ5Y0fbS/wtelyY1cfjOmkrJOa68+YOomOa21J\n+4h1c+317zZ2G9VnW9/AKNP2abyATTpSJXkzJ9ZFK1Fi2OlJ8/bORy9kaXxrNnD13RrwS06Dl6b5\n6c16lJyJqKGX4qdx0tmbNrS96ETaPo1XaoOIbCVdR8rJlZ/7bdlqxQBUHEgjeUTjRmbocv28+dvT\neZuLYhcnp3mu7UXBGz/aXuBr01k67JO+85sqNdefMXUSHdf6yr80PrUZe5pxo/ps6xsYZdo+jRew\nSUc6WHkXYOuilSgx7PSkeXvnoxcyq/xSfawy2zgOpYtFNDxHjQ7S+nSh7UUn0jHTeG31bznp0QG7\n5kjTenlZ5UT0VhpII3lE49bYXE4ebzyoKccqs23cmvbPhdW0Y+4GqVYHlg77pO/8pkqk73UZIyM3\nPjs7O9l4zYeevImGrjTzapa3CsuNN23stmZsadtHkzJtn8YL2KTDuhhZCizFs/a3rY7cLFfufPRC\n5l1Ic/WxymzjOJQuFtHwHDU6SOvThbTj18hY6phpvK7633tuS48cOeqW3eZI03p5WeWsKM3cRu3d\n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\nNM/S1pKoTFZ4rq96v0t5l+JY+eWcwmb/SJ84Tp9azvXvnI5z7WXVIzpTXap7m/CGTLZP4wVs0hEZ\nmNJGSpfMageanNFEOlPpfJpfySBq5Dxy5OJzHSddCi119ua5Zgf0Zo6a+Xh1yOmzbcdJy410Sksm\nb8AtyRyxlWj6SD262m0kbqqDtB1y8SO6LtG0s7TMnGzNtvTqXdKFhXfzkZM/YkOWflZldR23cmly\nMlvhuX2ibeRK87DK89raln3L3Oph5enJ4dm+tbzvta0VVpY93i65vur9LuXtxSnZoZcuYo9p3FwZ\nlo5y7WXVo41tWrpMSR848liG2z6NF7BJR1PJNQ0SGcxq03t5pQ1eOp/r9JZBdK2nN4ClaUv6Tcto\n5uPVIZqHVd8mbS4kadymMxqpQ60NefFKMvZhp+lhbV4v6cnSmSWbNVPYbKfV79yeQ6stPZ3lZIvo\nuqRbTx6rrJL8pfp4eVvl1LZ5SS85nefqn55rI5dq/qEjS0+r/ur1/Zx9WHJ65aXpm2G176yrtfVS\neHqkKx+WzFbe6YyZpxOvftb30t5cK376YJQncyTc+l7SX02/aNbRk8tjGW77NF7AJh21g0TNYFab\n3svLatTc+WYnXH3mLnJ91zPNt20ZiZE26rC1Z29SJI/99d0/xW7FyzmbER2mTkhE5to2yKVvlt3F\nTrsclg5K9pHKbV1QSu2cax8rr9wS/Orw9rDZ8bf25dvM3yqrJH+pPl7eVjm17ZhLU9J5rv675/Zv\nA4jKZenI0x+w/8ZDVfXEiRPulg1PXsvOmw5Erv97OrLK9vpQSm4W0Mq/1M45mdM8rbxXMnlxcnmX\nbC46g5yrTy7c+h7R3+LY2pfO0+WKvW2Xf3H1Mp3t03gBm3TUDhI5o+ia3ssrbfDS+UiZqRH0Wc80\nXz/t/oHPyye3h695eDNeqs27W/9deDV6UY09sZnm31a3Ofvw0uSW+NZ5pDooDbrN+Fa8NE2JnM7S\n72Vd7X/dSan+q5un1YZvr6yS/KX6eHlb5bRtQy+sSfN9gqvwlQ5SGWM6z8uV1tWbydj97rehp6vc\n7IiddmvPuVKb5JxGK59cPb12iawqpWXul2G/U+LZRxoWqR+w+z5KT8+1tlmj49Xv0g1njW1a6dO8\no+kb6WyfxgvYpKPtYLEw3nZ3iGlnLRmf17C5BremjD1jiKapzX9/Wj9NTb1XR0T3dj3tMny95HVS\n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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x13c6eacd0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "preds = lm5.predict()\n",
    "errors = preds - np.log(df[\"predict\"])\n",
    "time_data = np.array([df.iloc[i].name.to_datetime() for i in range(len(df))]) #generate an array of dates \n",
    "plt.bar(time_data, errors)\n",
    "plt.ylabel(\"Errors\")\n",
    "plt.xlabel(\"Time\")\n",
    "plt.title(\"Errors vs Time plot\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "errors.autocorr()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Surprisingly, the autocorrelation increases but it's still not significant. Does this mean should we go with a simpler model? The answer is not a very decisive one. We need to test how the model performs on the validation data, and test data to be sure of which model to go with. **The test for assumptions only tell us whether the quality factors of the model are to be trusted or not. They don't tell us directly about the quality of the linear model** That's the job of quality factors given the assumptions hold true.\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernelspec": {
   "display_name": "Python [Root]",
   "language": "python",
   "name": "Python [Root]"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
